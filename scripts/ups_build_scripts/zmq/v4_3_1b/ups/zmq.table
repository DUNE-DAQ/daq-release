File=Table
Product=zmq

#*************************************************
# Starting Group definition
#
# ZMQ_BASE_DIR
# ZMQ_INCLUDE_DIR
# ZMQ_LIB_DIR

Group:

Flavor=ANY
Qualifiers=

  Action=DefineFQ
    envSet (ZMQ_FQ, ${UPS_PROD_FLAVOR})

  Action = ExtraSetup

Flavor=ANY
Qualifiers=e15

  Action=DefineFQ
    envSet (ZMQ_FQ, ${UPS_PROD_FLAVOR}-e15)

  Action = ExtraSetup
    setupRequired( gcc v6_4_0 )

Flavor=ANY
Qualifiers=e17

  Action=DefineFQ
    envSet (ZMQ_FQ, ${UPS_PROD_FLAVOR}-e17)

  Action = ExtraSetup
    setupRequired( gcc v7_3_0 )

Flavor=ANY
Qualifiers=e19

  Action=DefineFQ
    envSet (ZMQ_FQ, ${UPS_PROD_FLAVOR}-e19)

  Action = ExtraSetup
    setupRequired( gcc v8_2_0 )

Flavor=ANY
Qualifiers=c7

  Action=DefineFQ
    envSet (ZMQ_FQ, ${UPS_PROD_FLAVOR}-c7)

  Action = ExtraSetup
    setupRequired( clang v7_0_0 )
    setupRequired( gcc v8_2_0 )

Flavor=ANY
Qualifiers=c2

  Action=DefineFQ
    envSet (ZMQ_FQ, ${UPS_PROD_FLAVOR}-c2)

  Action = ExtraSetup
    setupRequired( clang v5_0_1 )
    setupRequired( gcc v6_4_0 )

Common:
   Action=setup
      proddir()
      setupenv()
      ExeActionRequired(DefineFQ)
      envSet (ZMQ_VERSION, ${UPS_PROD_VERSION} )
      envSet (ZMQ_BASE, ${UPS_PROD_DIR}/${ZMQ_FQ})
      envSet (ZMQ_FQ_DIR, ${UPS_PROD_DIR}/${ZMQ_FQ})
      # look for the include directory
      if    ( sh -c 'for dd in include;do [ -d ${ZMQ_BASE}/$dd ] && exit;done;exit 1' )
          prodDir( _INC, ${ZMQ_BASE}/include )
          envSet (ZMQ_INCLUDE_DIR, ${UPS_PROD_DIR}/${ZMQ_FQ}/include)
          envSet (ZMQ_INC, ${UPS_PROD_DIR}/${ZMQ_FQ}/include)
       else ()
	  execute( true, NO_UPS_ENV )
      endif ( sh -c 'for dd in include;do [ -d ${ZMQ_BASE}/$dd ] && exit;done;exit 1' )
      # add the lib directory to LD_LIBRARY_PATH if it exists
      envSet (ZMQ_LIB_DIR, ${UPS_PROD_DIR}/${ZMQ_FQ}/lib)
      envSet (ZMQ_LIB, ${UPS_PROD_DIR}/${ZMQ_FQ}/lib)
      if ( test `uname` = "Darwin" )
	envPrepend(DYLD_LIBRARY_PATH, ${ZMQ_BASE}/lib)
      else()
	envPrepend(LD_LIBRARY_PATH, ${ZMQ_BASE}/lib)
      endif ( test `uname` = "Darwin" )
      # add the bin directory to the path if it exists
      if    ( sh -c 'for dd in bin;do [ -d ${ZMQ_BASE}/$dd ] && exit;done;exit 1' )
          pathPrepend(PATH, ${ZMQ_BASE}/bin )
      else ()
          execute( true, NO_UPS_ENV )
      endif ( sh -c 'for dd in bin;do [ -d ${ZMQ_BASE}/$dd ] && exit;done;exit 1' )
      # requirements
      exeActionRequired(ExtraSetup)

End:
# End Group definition
#*************************************************
