CMP_AUTH_NODES   macro       360 src/upsutl.c     #define CMP_AUTH_NODES(struct) \
KEEP_OR_REMOVE_FILE macro        87 src/upsutl.c     #define KEEP_OR_REMOVE_FILE() \
NULL             macro        83 src/upsutl.c     #define NULL 0
VPREFIX          macro        85 src/upsutl.c     #define VPREFIX "UPSUTL: "
g_DID_COPY_MAN   variable     73 src/upsutl.c     int g_DID_COPY_MAN = 0;
g_finish_cpu     variable     94 src/upsutl.c     static clock_t g_start_cpu, g_finish_cpu;
g_finish_w       variable     95 src/upsutl.c     static time_t g_start_w, g_finish_w;
g_start_cpu      variable     94 src/upsutl.c     static clock_t g_start_cpu, g_finish_cpu;
g_start_w        variable     95 src/upsutl.c     static time_t g_start_w, g_finish_w;
g_stat_dir       variable     96 src/upsutl.c     static char g_stat_dir[] = "statistics/";
g_umask          variable     98 src/upsutl.c     static mode_t g_umask = 0;
g_unknown_user   variable     97 src/upsutl.c     static char g_unknown_user[] = "UNKNOWN";
qsort_cmp_string function   1363 src/upsutl.c     int qsort_cmp_string( const void * c1, const void * c2 )
stricmp_charmap  variable    848 src/upsutl.c     static unsigned char stricmp_charmap[] = {
upsutl_finish_temp_file function    282 src/upsutl.c     void upsutl_finish_temp_file( const FILE * const a_stream,
upsutl_finish_up function    114 src/upsutl.c     int upsutl_finish_up(const FILE * const a_stream, const int a_shell,
upsutl_free_config function    451 src/upsutl.c     t_upstyp_config *upsutl_free_config( const t_upstyp_config * const a_db_config)
upsutl_free_inst_list function    526 src/upsutl.c     t_upslst_item *upsutl_free_inst_list( t_upslst_item ** const a_inst_list)
upsutl_free_matched_instance_list function    497 src/upsutl.c     t_upslst_item *upsutl_free_matched_instance_list(
upsutl_free_matched_product_list function    467 src/upsutl.c     t_upslst_item *upsutl_free_matched_product_list(
upsutl_get_config function    418 src/upsutl.c     t_upstyp_product *upsutl_get_config( const char * const a_db)
upsutl_get_files function    556 src/upsutl.c     void upsutl_get_files(const char * const a_dir,
upsutl_get_hostname function    325 src/upsutl.c     char *upsutl_get_hostname( void )
upsutl_get_prod_dir function    626 src/upsutl.c     char *upsutl_get_prod_dir(const char * const a_db,
upsutl_is_a_dir  function   1342 src/upsutl.c     int upsutl_is_a_dir(const char * const a_pathname)
upsutl_is_a_file function   1319 src/upsutl.c     int upsutl_is_a_file(const char * const a_filename)
upsutl_is_authorized function    369 src/upsutl.c     int upsutl_is_authorized( const t_upstyp_matched_instance * const a_minst,
upsutl_start_timing function    661 src/upsutl.c     void upsutl_start_timing(void)
upsutl_statistics function    708 src/upsutl.c     void upsutl_statistics(t_upslst_item const * const a_mproduct_list,
upsutl_stop_timing function    677 src/upsutl.c     void upsutl_stop_timing(void)
upsutl_str_create function   1073 src/upsutl.c     char *upsutl_str_create( char * const str, const char copt )
upsutl_str_crecat function   1116 src/upsutl.c     char *upsutl_str_crecat( char * const str1, char * const str2 )
upsutl_str_remove function   1213 src/upsutl.c     size_t upsutl_str_remove( char * const str, const char * const str_remove )
upsutl_str_remove_edges function   1242 src/upsutl.c     size_t upsutl_str_remove_edges( char * const str, const char * const str_remove )
upsutl_str_remove_end_quotes function   1282 src/upsutl.c     size_t upsutl_str_remove_end_quotes( char * str, 
upsutl_str_sort  function   1146 src/upsutl.c     int upsutl_str_sort( char * const str, const char c )
upsutl_stricmp   function    895 src/upsutl.c     int upsutl_stricmp( const char *s1, const char *s2 )
upsutl_strincmp  function    924 src/upsutl.c     int upsutl_strincmp( const char *s1, const char *s2, const size_t n )
upsutl_strstr    function    978 src/upsutl.c     char *upsutl_strstr( const char * const a_str, const char * const a_pattern )
upsutl_time_date function   1011 src/upsutl.c     char *upsutl_time_date(const int a_flag)
upsutl_unset_upsvars function    264 src/upsutl.c     void upsutl_unset_upsvars( const FILE * const a_stream,
upsutl_upcase    function    952 src/upsutl.c     char *upsutl_upcase(const char * const a_str)
upsutl_user      function   1043 src/upsutl.c     char *upsutl_user(void)
FromAny          macro       128 src/ups_list.c   #define FromAny(ELEMENT) \
FromBoth         macro       190 src/ups_list.c   #define FromBoth(ELEMENT) \
FromConfig       macro       103 src/ups_list.c   #define FromConfig(ELEMENT,STRING) \
FromDatabase     macro        89 src/ups_list.c   #define FromDatabase(ELEMENT,STRING) \
FromTable        macro        75 src/ups_list.c   #define FromTable(ELEMENT) \
FromVersion      macro        61 src/ups_list.c   #define FromVersion(ELEMENT) \
NULL             macro        58 src/ups_list.c   #define NULL 0
OutputConfig     macro       117 src/ups_list.c   #define OutputConfig() \
PRINT_DB         macro       281 src/ups_list.c   #define PRINT_DB(dbname) \
VPREFIX          macro        55 src/ups_list.c   #define VPREFIX "UPSLIST: "
WAW              macro       251 src/ups_list.c   #define WAW(WHAT) \
defaults         macro       220 src/ups_list.c   #define defaults(INSTANCE) \
g_MATCH_DONE     variable     53 src/ups_list.c   static int g_MATCH_DONE = 0;
list_K           function    666 src/ups_list.c   void list_K(const t_upstyp_matched_instance * const instance, 
list_output      function    517 src/ups_list.c   void list_output(const t_upslst_item * const a_mproduct_list,
print_chain      function    880 src/ups_list.c   void print_chain(const t_upstyp_matched_instance * const instance,
product_cmp      function    292 src/ups_list.c   int product_cmp ( const void * const d1, const void * const d2 )
product_name     function    299 src/ups_list.c   int product_name ( const void * const d1, const void * const d2 )
ups_list         function    318 src/ups_list.c   t_upslst_item *ups_list( t_upsugo_command * const a_command_line ,
ups_list_core    function    438 src/ups_list.c   t_upslst_item *ups_list_core(t_upsugo_command * const a_command_line ,
DO_INCLUDE_IN_ENV macro       122 src/upsget.c     #define DO_INCLUDE_IN_ENV 1
DO_NOT_INCLUDE_IN_ENV macro       123 src/upsget.c     #define DO_NOT_INCLUDE_IN_ENV 0
DO_NOT_QUOTE_STRING macro       127 src/upsget.c     #define DO_NOT_QUOTE_STRING 1 /* Always quote, for now */
DO_NOT_UNSET_IF_NULL macro       125 src/upsget.c     #define DO_NOT_UNSET_IF_NULL 0
DO_QUOTE_STRING  macro       126 src/upsget.c     #define DO_QUOTE_STRING 1
DO_UNSET_IF_NULL macro       124 src/upsget.c     #define DO_UNSET_IF_NULL 1
HASHATOM         macro      1167 src/upsget.c     #define HASHATOM( k ) ((unsigned int)(k)>>2)
LOOK_FOR_FILE    macro      1383 src/upsget.c     #define LOOK_FOR_FILE() \
SHUTUP           macro        47 src/upsget.c     #define SHUTUP \
TILDE            macro        63 src/upsget.c     #define TILDE "~"
TRANSLATE_ENV    macro      1393 src/upsget.c     #define TRANSLATE_ENV(dst_var, source_var) \
UPSPRE           macro        61 src/upsget.c     #define UPSPRE "${UPS_"
USERKEY          macro        62 src/upsget.c     #define USERKEY "${_"
bit_bucket       variable     54 src/upsget.c     static long bit_bucket = 0;
func             member      116 src/upsget.c     var_func func;
g_UPSGET         macro        60 src/upsget.c     #define g_UPSGET "UPSGET: "
g_buffer         variable     64 src/upsget.c     static char g_buffer[FILENAME_MAX+1];
g_var_subs       variable    129 src/upsget.c     static t_var_sub g_var_subs[] = {
get_element      macro        66 src/upsget.c     #define get_element(STRING,ELEMENT) \
include_in_env   member      117 src/upsget.c     int include_in_env;
quote_string     member      119 src/upsget.c     int quote_string;
s_var_sub        struct      114 src/upsget.c     typedef struct s_var_sub {
shutup           function   1540 src/upsget.c     static void shutup (const t_upstyp_db * const db_info_ptr,
string           member      115 src/upsget.c     char *string;
t_var_sub        typedef     120 src/upsget.c     } t_var_sub;
unset_if_null    member      118 src/upsget.c     int unset_if_null;
upsget_OS_flavor function   1087 src/upsget.c     char *upsget_OS_flavor(const t_upstyp_db * const db_info_ptr,
upsget_allout    function    262 src/upsget.c     void upsget_allout(const FILE * const stream, 
upsget_archive_file function    686 src/upsget.c     char *upsget_archive_file(const t_upstyp_db * const db_info_ptr,
upsget_catman_source_dir function   1253 src/upsget.c     char *upsget_catman_source_dir( const t_upstyp_matched_instance * const a_inst,
upsget_chain_file function   1109 src/upsget.c     t_upstyp_product *upsget_chain_file(const char * const a_db,
upsget_compile   function    792 src/upsget.c     char *upsget_compile(const t_upstyp_db * const db_info_ptr,
upsget_database  function   1029 src/upsget.c     char *upsget_database(const t_upstyp_db * const db_info_ptr,
upsget_envout    function    234 src/upsget.c     void upsget_envout(const FILE * const stream, 
upsget_envstr    function    627 src/upsget.c     char *upsget_envstr(const t_upstyp_db * const db_info_ptr,
upsget_extended  function   1005 src/upsget.c     char *upsget_extended(const t_upstyp_db * const db_info_ptr,
upsget_flavor    function    914 src/upsget.c     char *upsget_flavor(const t_upstyp_db * const db_info_ptr,
upsget_info_source_dir function   1301 src/upsget.c     char *upsget_info_source_dir( const t_upstyp_matched_instance * const a_inst,
upsget_key       function   1169 src/upsget.c     int upsget_key(const t_upstyp_instance * const instance)
upsget_man_source_dir function   1196 src/upsget.c     char *upsget_man_source_dir( const t_upstyp_matched_instance * const a_inst,
upsget_options   function   1016 src/upsget.c     char *upsget_options(const t_upstyp_db * const db_info_ptr,
upsget_origin    function    878 src/upsget.c     char *upsget_origin(const t_upstyp_db * const db_info_ptr,
upsget_prod_dir  function    723 src/upsget.c     char *upsget_prod_dir(const t_upstyp_db * const db_info_ptr,
upsget_product   function    886 src/upsget.c     char *upsget_product(const t_upstyp_db * const db_info_ptr,
upsget_product_uc function    894 src/upsget.c     char *upsget_product_uc(const t_upstyp_db * const db_info_ptr,
upsget_qualifiers function    922 src/upsget.c     char *upsget_qualifiers(const t_upstyp_db * const db_info_ptr,
upsget_remall    function    189 src/upsget.c     void upsget_remall(const FILE * const stream, 
upsget_reqchain  function    942 src/upsget.c     char *upsget_reqchain(const t_upstyp_db * const db_info_ptr,
upsget_reqqualifiers function    931 src/upsget.c     char *upsget_reqqualifiers(const t_upstyp_db * const db_info_ptr,
upsget_shell     function    953 src/upsget.c     char *upsget_shell(const t_upstyp_db * const db_info_ptr,
upsget_source    function    973 src/upsget.c     char *upsget_source(const t_upstyp_db * const db_info_ptr,
upsget_table_file function   1397 src/upsget.c     char *upsget_table_file( const char * const a_prodname,
upsget_this_db   function   1066 src/upsget.c     char *upsget_this_db(const t_upstyp_db * const db_info_ptr,
upsget_tilde_dir function   1047 src/upsget.c     char *upsget_tilde_dir(char * const addr)
upsget_translation function    457 src/upsget.c     char *upsget_translation( const t_upstyp_matched_instance * const minstance,
upsget_translation_env function    340 src/upsget.c     char *upsget_translation_env( char * const oldstr )
upsget_translation_tilde function    413 src/upsget.c     char *upsget_translation_tilde( char * const oldstr )
upsget_ups_dir   function    757 src/upsget.c     char *upsget_ups_dir(const t_upstyp_db * const db_info_ptr,
upsget_verbose   function    993 src/upsget.c     char *upsget_verbose(const t_upstyp_db * const db_info_ptr,
upsget_version   function    905 src/upsget.c     char *upsget_version(const t_upstyp_db * const db_info_ptr,
upsget_version_file function   1142 src/upsget.c     t_upstyp_product *upsget_version_file(const char * const a_db,
var_func         typedef     110 src/upsget.c     typedef char * (*var_func)(const t_upstyp_db * const db_info_ptr,
ups_flavor       function     56 src/ups_flavor.c void ups_flavor( t_upsugo_command * const uc )
ups_unsetup      function     61 src/ups_unsetup.c t_upslst_item *ups_unsetup( const t_upsugo_command * const a_command_line,
ups_tailor       function     64 src/ups_tailor.c t_upslst_item *ups_tailor( const t_upsugo_command * const a_command_line,
CHAIN            macro        48 src/ups_declare.c #define CHAIN "chain"
DECLARE          macro        50 src/ups_declare.c #define DECLARE "declare"
NULL             macro        45 src/ups_declare.c #define NULL 0
UPS_DECLARE      macro        51 src/ups_declare.c #define UPS_DECLARE "DECLARE: "
VERSION          macro        49 src/ups_declare.c #define VERSION "version"
buf              variable     54 src/ups_declare.c static char buf[MAX_LINE_LEN];
declared_date    variable     64 src/ups_declare.c static char *declared_date=0;
save_prod_dir    variable     62 src/ups_declare.c static char *save_prod_dir;
save_table_dir   variable     59 src/ups_declare.c static char *save_table_dir; /* match won't work "how I want" */
save_table_file  variable     60 src/ups_declare.c static char *save_table_file; /* with table specifications */
save_ups_dir     variable     61 src/ups_declare.c static char *save_ups_dir;
save_version     variable     58 src/ups_declare.c static char *save_version;
the_chain        variable     57 src/ups_declare.c static char *the_chain=0;
the_flavor       variable     55 src/ups_declare.c static char *the_flavor;
the_qualifiers   variable     56 src/ups_declare.c static char *the_qualifiers;
ups_declare      function    183 src/ups_declare.c t_upslst_item *ups_declare( t_upsugo_command * const uc ,
upsdcl_new_chain function     78 src/ups_declare.c t_upstyp_instance *upsdcl_new_chain(t_upsugo_command * const uc)
upsdcl_new_product function     67 src/ups_declare.c t_upstyp_product *upsdcl_new_product(t_upsugo_command * const uc)
upsdcl_new_version function     93 src/ups_declare.c t_upstyp_instance *upsdcl_new_version(t_upsugo_command * const uc,
username         variable     63 src/ups_declare.c static char *username=0;
upshlp_command   function     53 src/upshlp.c     int upshlp_command(const char * const what) 
DOMAIN           macro        59 src/funame.c     #define DOMAIN ".fnal.gov"
MAXHOSTNAMELEN   macro        52 src/funame.c     #define MAXHOSTNAMELEN 64
MAXIPLEN         macro       308 src/funame.c     #define MAXIPLEN 16
funame_f         function     62 src/funame.c     funame_f(baseuname,hostname,ipaddress)
getopt           function    213 src/funame.c     int getopt(argc, argv, optstring)
machine          member       49 src/funame.c     char machine[32];
main             function    311 src/funame.c     main(argc,argv)
nodename         member       46 src/funame.c     char nodename[32];
optarg           variable    211 src/funame.c     char *optarg = 0;
opterr           variable    209 src/funame.c     int opterr = 1;
optind           variable    208 src/funame.c     int optind = 1;
release          member       47 src/funame.c     char release[32];
sysname          member       45 src/funame.c     char sysname[32];
uname            function    130 src/funame.c     int uname(name)
utsname          struct       44 src/funame.c     struct utsname {
version          member       48 src/funame.c     char version[32];
DEFAULT_EDITOR   macro        58 src/ups_modify.c #define DEFAULT_EDITOR "vi"
MAX_FILES        macro        60 src/ups_modify.c #define MAX_FILES 50
NOT_UNIQUE       macro        59 src/ups_modify.c #define NOT_UNIQUE 1
QUIT             macro        61 src/ups_modify.c #define QUIT -2
SHUTUP           macro        49 src/ups_modify.c #define SHUTUP \
UNDEFINED        macro        62 src/ups_modify.c #define UNDEFINED -1
bit_bucket       variable     56 src/ups_modify.c static long bit_bucket = 0;
choose_file      function    123 src/ups_modify.c int choose_file( void )
edit_file        function    232 src/ups_modify.c int edit_file( char * const file_name )
g_file_count     variable     67 src/ups_modify.c static int g_file_count = 0;
g_file_list      variable     66 src/ups_modify.c static char *g_file_list[ MAX_FILES ];
g_mp_list        variable     65 src/ups_modify.c static t_upslst_item *g_mp_list = 0;
g_uc             variable     64 src/ups_modify.c static t_upsugo_command *g_uc = 0;
make_file_list   function    166 src/ups_modify.c int make_file_list( void )
shutup           function    406 src/ups_modify.c static void shutup(const FILE * const tmpfile, const int ups_command)
ups_modify       function     82 src/ups_modify.c t_upslst_item *ups_modify( t_upsugo_command * const uc , 
verify_file      function    356 src/ups_modify.c int verify_file( char * const file_name )
FALSE            macro        86 src/ups_main.c   #define FALSE 0
NULL             macro        83 src/ups_main.c   #define NULL 0
TRUE             macro        89 src/ups_main.c   #define TRUE 1
g_simulate       variable     70 src/ups_main.c   int g_simulate = 0;
g_umask          variable     71 src/ups_main.c   static mode_t g_umask = 022;
main             function     96 src/ups_main.c   int main(int argc, char *argv[])
ups_unk          function     60 src/ups_unk.c    t_upslst_item *ups_unk(const t_upsugo_command * const a_command_line,
CHAIN            macro        55 src/ups_touch.c  #define CHAIN "chain"
DECLARE          macro        57 src/ups_touch.c  #define DECLARE "declare"
NULL             macro        52 src/ups_touch.c  #define NULL 0
SHUTUP           macro        42 src/ups_touch.c  #define SHUTUP \
VERSION          macro        56 src/ups_touch.c  #define VERSION "version"
VPREFIX          macro        58 src/ups_touch.c  #define VPREFIX "UPS TOUCH: "
bit_bucket       variable     49 src/ups_touch.c  static long bit_bucket = 0;
shutup           function    262 src/ups_touch.c  static void shutup(const FILE * const tmpfile, const int ups_command)
ups_touch        function     73 src/ups_touch.c  t_upslst_item *ups_touch( t_upsugo_command * const uc,
upsver_mes       function     56 src/upsver.c     void upsver_mes (const int vl, char * const format, ...)
NO               macro        44 src/upskey.c     #define NO INVALID_INDEX
g_ikeys          variable     47 src/upskey.c     static int g_ikeys[ e_key_count+1 ];
g_key_info       variable     81 src/upskey.c     t_upskey_map g_key_info[] =
upskey_chnhead_arr function    428 src/upskey.c     int *upskey_chnhead_arr(void)
upskey_chninst_arr function    444 src/upskey.c     int *upskey_chninst_arr(void)
upskey_conf_print function    479 src/upskey.c     void upskey_conf_print( const t_upstyp_config * const conf )
upskey_get_info  function    147 src/upskey.c     t_upskey_map *upskey_get_info( const char * const str )
upskey_inst_arr  function    354 src/upskey.c     int *upskey_inst_arr(void)
upskey_inst_getaction function    212 src/upskey.c     t_upstyp_action *upskey_inst_getaction( t_upstyp_instance * const inst,
upskey_inst_getuserval function    246 src/upskey.c     char *upskey_inst_getuserval( t_upstyp_instance * const inst,
upskey_inst_getval function    171 src/upskey.c     char *upskey_inst_getval( t_upstyp_instance * const inst, const char * const skey )
upskey_inst_print function    280 src/upskey.c     void upskey_inst_print( const t_upstyp_instance * const inst )
upskey_inst_setval function    190 src/upskey.c     char *upskey_inst_setval( t_upstyp_instance * const inst,
upskey_prod_arr  function    340 src/upskey.c     int *upskey_prod_arr(void)
upskey_prod_getval function    303 src/upskey.c     char *upskey_prod_getval( t_upstyp_product * const prod, const char * const skey )
upskey_prod_print function    466 src/upskey.c     void upskey_prod_print( const t_upstyp_product * const prod )
upskey_prod_setval function    322 src/upskey.c     char *upskey_prod_setval( t_upstyp_product * const prod,
upskey_tblhead_arr function    398 src/upskey.c     int *upskey_tblhead_arr(void)
upskey_tblinst_arr function    414 src/upskey.c     int *upskey_tblinst_arr(void)
upskey_verhead_arr function    368 src/upskey.c     int *upskey_verhead_arr(void)
upskey_verinst_arr function    384 src/upskey.c     int *upskey_verinst_arr(void)
CHAIN            macro        48 src/ups_undeclare.c #define CHAIN "chain"
NULL             macro        45 src/ups_undeclare.c #define NULL 0
UPS_UNDECLARE    macro        50 src/ups_undeclare.c #define UPS_UNDECLARE "UNDECLARE: "
VERSION          macro        49 src/ups_undeclare.c #define VERSION "version"
ups_undeclare    function     65 src/ups_undeclare.c t_upslst_item *ups_undeclare( t_upsugo_command * const uc ,
ups_start        function     61 src/ups_start.c  t_upslst_item *ups_start(const t_upsugo_command * const a_command_line,
all_gone         function    459 src/upstyp.c     int all_gone( const void * const ptr )
ups_free_action  function    390 src/upstyp.c     int ups_free_action( t_upstyp_action * const act_ptr )
ups_free_config  function    434 src/upstyp.c     int ups_free_config( t_upstyp_config * const conf_ptr )
ups_free_instance function    305 src/upstyp.c     int ups_free_instance( t_upstyp_instance * const inst_ptr )
ups_free_matched_instance function    156 src/upstyp.c     t_upstyp_matched_instance *ups_free_matched_instance(
ups_free_matched_instance_structure function    193 src/upstyp.c     t_upstyp_matched_instance *ups_free_matched_instance_structure(
ups_free_matched_product function     98 src/upstyp.c     t_upstyp_matched_product *ups_free_matched_product(
ups_free_product function    235 src/upstyp.c     int ups_free_product( t_upstyp_product * const prod_ptr )
ups_new_action   function    371 src/upstyp.c     t_upstyp_action *ups_new_action( void )
ups_new_config   function    415 src/upstyp.c     t_upstyp_config *ups_new_config( void )
ups_new_instance function    286 src/upstyp.c     t_upstyp_instance *ups_new_instance( void )
ups_new_matched_instance function    136 src/upstyp.c     t_upstyp_matched_instance *ups_new_matched_instance( void )
ups_new_matched_product function     58 src/upstyp.c     t_upstyp_matched_product *ups_new_matched_product(
ups_new_product  function    216 src/upstyp.c     t_upstyp_product *ups_new_product( void )
UPSMEM_GET_TOP   macro        39 src/upsmem.c     #define UPSMEM_GET_TOP(memPtr) ((char *)memPtr - (UPSMEM_INT))
UPSMEM_GET_USER  macro        40 src/upsmem.c     #define UPSMEM_GET_USER(memPtr) ((char *)memPtr + (UPSMEM_INT))
UPSMEM_INT       macro        38 src/upsmem.c     #define UPSMEM_INT UALIGN(sizeof(int))
upsmem_dec_refctr function    178 src/upsmem.c     void upsmem_dec_refctr(const void * const a_data)
upsmem_free      function    112 src/upsmem.c     void upsmem_free(void *a_data)
upsmem_get_refctr function    137 src/upsmem.c     int upsmem_get_refctr(const void * const a_data)
upsmem_inc_refctr function    158 src/upsmem.c     void upsmem_inc_refctr(const void * const a_data)
upsmem_malloc    function     60 src/upsmem.c     void *upsmem_malloc(const int a_bytes)
upsmem_malloc_error function     96 src/upsmem.c     void upsmem_malloc_error(void) /* was (const int a_bytes) */
SHUTUP           macro        42 src/ups_depend.c #define SHUTUP \
bit_bucket       variable     49 src/ups_depend.c static long bit_bucket = 0;
shutup           function     94 src/ups_depend.c static void shutup (const char * const s_cmd)
ups_depend       function     66 src/ups_depend.c t_upslst_item *ups_depend( t_upsugo_command * const u_cmd, 
HOST_BUF_SIZE    macro        13 src/upsuname.c   #define HOST_BUF_SIZE 1024
default_machines variable     77 src/upsuname.c   char *default_machines[5][2] = {
ups_64bit_check  function    154 src/upsuname.c   ups_64bit_check() {
ups_append_MACHINE function    126 src/upsuname.c   ups_append_MACHINE(char *buf) 
ups_append_OS    function     87 src/upsuname.c   ups_append_OS(char *buf) 
ups_append_release function    161 src/upsuname.c   ups_append_release(char *buf) 
ups_get_default_host function    239 src/upsuname.c   ups_get_default_host() {
ups_get_default_quals function    211 src/upsuname.c   ups_get_default_quals() {
ups_have_flavor_override function     16 src/upsuname.c   ups_have_flavor_override() {
ups_make_default_quals_optional function    222 src/upsuname.c   ups_make_default_quals_optional() {
CHECK_FOR_COMMA  macro       106 src/ups_verify.c #define CHECK_FOR_COMMA(keyword) \
SHUTUP           macro        62 src/ups_verify.c #define SHUTUP \
VERIFY_DIR_SPEC  macro        71 src/ups_verify.c #define VERIFY_DIR_SPEC(dir, tran) \
VERIFY_FILE_SPEC macro        93 src/ups_verify.c #define VERIFY_FILE_SPEC(file) \
VERIFY_INST_PARAMS macro        49 src/ups_verify.c #define VERIFY_INST_PARAMS \
bit_bucket       variable     69 src/ups_verify.c static long bit_bucket = 0;
g_COMMA          macro       105 src/ups_verify.c #define g_COMMA ","
g_dollarsign     variable     68 src/ups_verify.c static char *g_dollarsign = "$";
shutup           function    394 src/ups_verify.c static void shutup (VERIFY_INST_PARAMS)
ups_verify_chain_instance function    213 src/ups_verify.c static void ups_verify_chain_instance(VERIFY_INST_PARAMS)
ups_verify_dbconfig function    125 src/ups_verify.c void ups_verify_dbconfig(const t_upstyp_db * const a_db,
ups_verify_generic_instance function    369 src/ups_verify.c static void ups_verify_generic_instance(VERIFY_INST_PARAMS,
ups_verify_matched_instance function    171 src/ups_verify.c void ups_verify_matched_instance(const t_upstyp_db * const a_db,
ups_verify_table_instance function    299 src/ups_verify.c static void ups_verify_table_instance(VERIFY_INST_PARAMS)
ups_verify_version_instance function    242 src/ups_verify.c static void ups_verify_version_instance(VERIFY_INST_PARAMS)
ADD_TO_MINST_LIST macro       184 src/upsmat.c     #define ADD_TO_MINST_LIST(inst_type) \
ADD_TO_MPRODUCT_LIST macro       208 src/upsmat.c     #define ADD_TO_MPRODUCT_LIST() \
CHECK_UNIQUE     macro       151 src/upsmat.c     #define CHECK_UNIQUE(a_list, type) \
FREE_INVALID_INSTANCES macro       227 src/upsmat.c     #define FREE_INVALID_INSTANCES(minst_list) \
GET_CONFIG_FILE  macro       216 src/upsmat.c     #define GET_CONFIG_FILE() \
GET_NEW_MINST    macro       167 src/upsmat.c     #define GET_NEW_MINST(inst_type) \
MATVLEVEL        macro       123 src/upsmat.c     #define MATVLEVEL 1
NULL             macro       100 src/upsmat.c     #define NULL 0
TABLE_FILE_ONLY  macro       133 src/upsmat.c     #define TABLE_FILE_ONLY() \
TMP_LISTS_SET    macro       127 src/upsmat.c     #define TMP_LISTS_SET() \
VPREFIX          macro       120 src/upsmat.c     #define VPREFIX "UPSMAT: "
g_ugo_version    variable    116 src/upsmat.c     static int g_ugo_version = 0;
g_ups_error      variable    109 src/upsmat.c     static int g_ups_error;
get_instance     function   1270 src/upsmat.c     static int get_instance(const t_upslst_item * const a_read_instances,
match_from_chain function    931 src/upsmat.c     static int match_from_chain( const char * const a_product,
match_from_table function   1222 src/upsmat.c     static int match_from_table( const char * const a_product,
match_from_version function   1058 src/upsmat.c     static int match_from_version( const char * const a_product,
match_instance_core function    729 src/upsmat.c     static t_upstyp_matched_product *match_instance_core(
upsmat_instance  function    261 src/upsmat.c     t_upslst_item *upsmat_instance(t_upsugo_command * const a_command_line,
upsmat_match_with_instance function    682 src/upsmat.c     t_upslst_item *upsmat_match_with_instance(
upsmat_version   function    626 src/upsmat.c     t_upstyp_instance *upsmat_version(t_upstyp_instance * const a_inst,
ADD_TO_ECHO      macro       121 src/ups_copy.c   #define ADD_TO_ECHO(inst_elem, format) \
COPY_FROM_OLD_INSTANCE macro       108 src/ups_copy.c   #define COPY_FROM_OLD_INSTANCE(the_inst, old_inst, inst_elem) \
COPY_TO_INSTANCE macro        85 src/ups_copy.c   #define COPY_TO_INSTANCE(the_inst, ugo_elem, old_inst, inst_elem) \
COPY_TO_INSTANCE_CHECK macro        96 src/ups_copy.c   #define COPY_TO_INSTANCE_CHECK(ugo_flag, ugo_elem, inst_elem) \
COPY_TO_NEW_VAR  macro       116 src/ups_copy.c   #define COPY_TO_NEW_VAR(ugo_elem, inst_elem, new_var) \
FALSE            macro        77 src/ups_copy.c   #define FALSE 0
SET_DCLR_LINE    macro       126 src/ups_copy.c   #define SET_DCLR_LINE(ugo_elem, inst_elem, ugo_flag) \
SET_DCLR_LINE_LIST macro       139 src/ups_copy.c   #define SET_DCLR_LINE_LIST(ugo_elem, inst_elem, ugo_flag) \
TRUE             macro        76 src/ups_copy.c   #define TRUE 1
buf              variable     83 src/ups_copy.c   static char buf[MAX_LINE_LEN];
fill_new_dclr_instance function    552 src/ups_copy.c   static t_upstyp_instance *fill_new_dclr_instance(
fill_ugo_struct  function    640 src/ups_copy.c   static t_upsugo_command *fill_ugo_struct( 
free_new_dclr_instance function    624 src/ups_copy.c   static t_upstyp_instance *free_new_dclr_instance(
free_ugo_struct  function    707 src/ups_copy.c   static t_upsugo_command *free_ugo_struct( 
ups_copy         function    163 src/ups_copy.c   t_upslst_item *ups_copy(const t_upsugo_command * const a_command_line,
CATMANPAGES      macro        61 src/upscpy.c     #define CATMANPAGES "catman"
CLOSE_PAREN      macro        46 src/upscpy.c     #define CLOSE_PAREN ')'
COMMA            macro        44 src/upscpy.c     #define COMMA ','
CONTINUE         macro        50 src/upscpy.c     #define CONTINUE "CONTINUE"
COPY_FILES       macro       166 src/upscpy.c     #define COPY_FILES(filename, dest_path, type) \
DATE_FLAG        macro        59 src/upscpy.c     #define DATE_FLAG "DATE"
DO_CHECK         macro        53 src/upscpy.c     #define DO_CHECK 1
DO_EXIT          macro        56 src/upscpy.c     #define DO_EXIT 1
DO_NO_UPS_ENV    macro        57 src/upscpy.c     #define DO_NO_UPS_ENV 1
DO_UPS_ENV       macro        58 src/upscpy.c     #define DO_UPS_ENV 0
DQUOTE           macro        43 src/upscpy.c     #define DQUOTE '"'
EXIT             macro        49 src/upscpy.c     #define EXIT "EXIT"
FIRST_MAN_CHAR   macro       214 src/upscpy.c     #define FIRST_MAN_CHAR '.'
FPRINTF_ERROR    macro        82 src/upscpy.c     #define FPRINTF_ERROR() \
MANPAGES         macro        62 src/upscpy.c     #define MANPAGES "man"
MAX_ARRAY_SIZE   macro       213 src/upscpy.c     #define MAX_ARRAY_SIZE 100 /* can only be all alphanumeric characters */
NO_CHECK         macro        54 src/upscpy.c     #define NO_CHECK 0
NO_EXIT          macro        55 src/upscpy.c     #define NO_EXIT 0
NO_EXTENSION     macro       534 src/upscpy.c     #define NO_EXTENSION '\0'
NO_UPS_ENV       macro        52 src/upscpy.c     #define NO_UPS_ENV "NO_UPS_ENV"
OLD_FLAG         macro        60 src/upscpy.c     #define OLD_FLAG "OLD"
OPEN_PAREN       macro        45 src/upscpy.c     #define OPEN_PAREN '('
PROCESS_DIR      macro       187 src/upscpy.c     #define PROCESS_DIR(dir_name, dir_size, type, keyword) \
REMOVE_FILES     macro       347 src/upscpy.c     #define REMOVE_FILES(filename, dest_path, type) \
RESET_STATUS     macro        86 src/upscpy.c     #define RESET_STATUS() \
SHUTUP           macro        77 src/upscpy.c     #define SHUTUP \
SLASH            macro        47 src/upscpy.c     #define SLASH "/"
SYSTEM_ERROR     macro        89 src/upscpy.c     #define SYSTEM_ERROR() \
UNPROCESS_DIR    macro       359 src/upscpy.c     #define UNPROCESS_DIR(dir_name, dir_size, type, keyword) \
UPS_ENV          macro        51 src/upscpy.c     #define UPS_ENV "UPS_ENV"
WSPACE           macro        48 src/upscpy.c     #define WSPACE " \t\n\r\f"
bit_bucket       variable     98 src/upscpy.c     static long bit_bucket = 0;
g_buff           variable     97 src/upscpy.c     static char g_buff[MAX_LINE_LEN];
get_man_subdir   function    535 src/upscpy.c     static char get_man_subdir(char * const a_man_file)
not_yet_created  function    577 src/upscpy.c     static int not_yet_created(const int * const array, const int index, 
shutup           function    593 src/upscpy.c     static void shutup (UPSCPY_PARAMS)
upscpy_catman    function    281 src/upscpy.c     void upscpy_catman(UPSCPY_PARAMS)
upscpy_html      function    110 src/upscpy.c     void upscpy_html(UPSCPY_PARAMS)
upscpy_info      function    119 src/upscpy.c     void upscpy_info(UPSCPY_PARAMS)
upscpy_man       function    215 src/upscpy.c     void upscpy_man(UPSCPY_PARAMS)
upscpy_news      function    501 src/upscpy.c     void upscpy_news(UPSCPY_PARAMS)
upscpy_rmcatman  function    436 src/upscpy.c     void upscpy_rmcatman(UPSCPY_PARAMS)
upscpy_rmman     function    373 src/upscpy.c     void upscpy_rmman(UPSCPY_PARAMS)
Cell_s           struct       15 src/dropit.c     struct Cell_s {
add_at_back      function     76 src/dropit.c     add_at_back(list,cell)
add_at_front     function     63 src/dropit.c     add_at_front(list,cell)
anchored         function    118 src/dropit.c     anchored(field,test)
command          variable     11 src/dropit.c     static char *command = "<Unknown>";
contains         function     99 src/dropit.c     contains(field,test)
destroy_Cell     function     44 src/dropit.c     destroy_Cell(cell)
exact            function    132 src/dropit.c     exact(field,test)
main             function    141 src/dropit.c     main(argc,argv,envp)
make_Cell        function     23 src/dropit.c     make_Cell(str)
next             member       16 src/dropit.c     struct Cell_s *next;
pathlist         variable     20 src/dropit.c     static struct Cell_s *pathlist = 0;
safe             variable     13 src/dropit.c     static char *safe = 0;
value            member       17 src/dropit.c     char *value;
FREE             macro        60 src/upsugo.c     #define FREE( X ) free( X ); X = 0;
MAX_ARGS         macro        58 src/upsugo.c     #define MAX_ARGS 1000
UPSUGO           macro        59 src/upsugo.c     #define UPSUGO "UPSUGO: "
UPS_NEED_DB      variable     56 src/upsugo.c     int UPS_NEED_DB=1;
UPS_UGO_ID       variable     51 src/upsugo.c     char UPS_UGO_ID[] = "@(#)upsugo.c 4.00";
add_chain        macro       186 src/upsugo.c     #define add_chain(CHAIN) \
argindx          variable    391 src/upsugo.c     int argindx;
build_list       macro       273 src/upsugo.c     #define build_list( LIST_ELEMENT , ARG ) \
case_0           macro       176 src/upsugo.c     #define case_0 case '0': uc->ugo_number = 1; break;
case_1           macro       177 src/upsugo.c     #define case_1 case '1': uc->ugo_number = 2; break;
case_2           macro       178 src/upsugo.c     #define case_2 case '2': uc->ugo_number = 3; break;
case_3           macro       179 src/upsugo.c     #define case_3 case '3': uc->ugo_number = 4; break;
case_4           macro       180 src/upsugo.c     #define case_4 case '4': uc->ugo_number = 5; break;
case_5           macro       181 src/upsugo.c     #define case_5 case '5': uc->ugo_number = 6; break;
case_6           macro       182 src/upsugo.c     #define case_6 case '6': uc->ugo_number = 7; break;
case_7           macro       183 src/upsugo.c     #define case_7 case '7': uc->ugo_number = 8; break;
case_A           macro       317 src/upsugo.c     #define case_A case 'A': uc->ugo_A = 1; build_list (uc->ugo_auth , "A") 
case_C           macro       153 src/upsugo.c     #define case_C case 'C': uc->ugo_C = 1; break;
case_D           macro       326 src/upsugo.c     #define case_D case 'D': uc->ugo_D = 1; set_value (uc->ugo_origin , "D") 
case_E           macro       155 src/upsugo.c     #define case_E case 'E': uc->ugo_E = 1; break;
case_F           macro       156 src/upsugo.c     #define case_F case 'F': uc->ugo_F = 1; break;
case_G           macro       348 src/upsugo.c     #define case_G case 'G': uc->ugo_G = 1; \
case_H           macro       320 src/upsugo.c     #define case_H case 'H': uc->ugo_H = 1; build_list (uc->ugo_osname , "H") 
case_K           macro       322 src/upsugo.c     #define case_K case 'K': uc->ugo_K = 1; build_list (uc->ugo_key , "K") 
case_L           macro       160 src/upsugo.c     #define case_L case 'L': uc->ugo_L = 1; break;
case_M           macro       328 src/upsugo.c     #define case_M case 'M': uc->ugo_M = 1; set_value (uc->ugo_tablefiledir, "M")
case_N           macro       329 src/upsugo.c     #define case_N case 'N': uc->ugo_N = 1; set_value (uc->ugo_anyfile , "N") 
case_O           macro       344 src/upsugo.c     #define case_O case 'O': uc->ugo_O = 1; \
case_P           macro       161 src/upsugo.c     #define case_P case 'P': uc->ugo_P = 1; break;
case_R           macro       162 src/upsugo.c     #define case_R case 'R': uc->ugo_R = 1; break;
case_S           macro       164 src/upsugo.c     #define case_S case 'S': uc->ugo_S = 1; break;
case_T           macro       331 src/upsugo.c     #define case_T case 'T': uc->ugo_T = 1; set_value (uc->ugo_archivefile , "T")
case_U           macro       333 src/upsugo.c     #define case_U case 'U': uc->ugo_U = 1; set_value (uc->ugo_upsdir , "U")
case_V           macro       167 src/upsugo.c     #define case_V case 'V': uc->ugo_V = 1; break;
case_W           macro       169 src/upsugo.c     #define case_W case 'W': uc->ugo_W = 1; break;
case_X           macro       171 src/upsugo.c     #define case_X case 'X': uc->ugo_X = 1; break;
case_Y           macro       173 src/upsugo.c     #define case_Y case 'Y': uc->ugo_Y = 1; break;
case_Z           macro       174 src/upsugo.c     #define case_Z case 'Z': uc->ugo_Z = 1; break;
case_a           macro       152 src/upsugo.c     #define case_a case 'a': uc->ugo_a = 1; break;
case_b           macro       325 src/upsugo.c     #define case_b case 'b': uc->ugo_b = 1; set_value (uc->ugo_compile_file, "b") 
case_c           macro       190 src/upsugo.c     #define case_c case 'c': uc->ugo_c = 1; add_chain("current"); uc->ugo_reqchain = "-c"; break;
case_d           macro       191 src/upsugo.c     #define case_d case 'd': uc->ugo_d = 1; add_chain("development"); uc->ugo_reqchain = "-d"; break;
case_dot         macro       335 src/upsugo.c     #define case_dot case '.': \
case_e           macro       154 src/upsugo.c     #define case_e case 'e': uc->ugo_e = 1; break;
case_f           macro       318 src/upsugo.c     #define case_f case 'f': uc->ugo_f = 1; build_list (uc->ugo_flavor , "f") 
case_g           macro       319 src/upsugo.c     #define case_g case 'g': uc->ugo_g = 1; build_list (uc->ugo_chain , "g")
case_h           macro       321 src/upsugo.c     #define case_h case 'h': uc->ugo_h = 1; build_list (uc->ugo_host , "h") 
case_help        macro       151 src/upsugo.c     #define case_help case '?': uc->ugo_help = 1; break;
case_j           macro       157 src/upsugo.c     #define case_j case 'j': uc->ugo_j = 1; break;
case_k           macro       158 src/upsugo.c     #define case_k case 'k': uc->ugo_k = 1; break;
case_l           macro       159 src/upsugo.c     #define case_l case 'l': uc->ugo_l = 1; break;
case_m           macro       327 src/upsugo.c     #define case_m case 'm': uc->ugo_m = 1; set_value (uc->ugo_tablefile , "m") 
case_n           macro       192 src/upsugo.c     #define case_n case 'n': uc->ugo_n = 1; add_chain("new"); uc->ugo_reqchain = "-n"; break;
case_o           macro       194 src/upsugo.c     #define case_o case 'o': uc->ugo_o = 1; add_chain("old"); uc->ugo_reqchain = "-o"; break;
case_p           macro       352 src/upsugo.c     #define case_p case 'p': uc->ugo_p = 1; \
case_q           macro       355 src/upsugo.c     #define case_q case 'q': uc->ugo_q = 1; \
case_r           macro       330 src/upsugo.c     #define case_r case 'r': uc->ugo_r = 1; set_value (uc->ugo_productdir , "r")
case_s           macro       163 src/upsugo.c     #define case_s case 's': uc->ugo_s = 1; break;
case_t           macro       193 src/upsugo.c     #define case_t case 't': uc->ugo_t = 1; add_chain("test"); uc->ugo_reqchain = "-t"; break;
case_u           macro       332 src/upsugo.c     #define case_u case 'u': uc->ugo_u = 1; set_value (uc->ugo_compile_dir, "u")
case_v           macro       166 src/upsugo.c     #define case_v case 'v': uc->ugo_v +=1; UPS_VERBOSE=uc->ugo_v; break;
case_w           macro       168 src/upsugo.c     #define case_w case 'w': uc->ugo_w = 1; break;
case_y           macro       172 src/upsugo.c     #define case_y case 'y': uc->ugo_y = 1; break;
case_z           macro       371 src/upsugo.c     #define case_z case 'z': uc->ugo_z = 1; \
errflg           variable    388 src/upsugo.c     int errflg = 0;
expand_flavorlist function     63 src/upsugo.c     expand_flavorlist(struct ups_command * uc) {
flavor_sub       function     96 src/upsugo.c     flavor_sub(struct ups_command * uc)
g_UPS_SHELL      variable    392 src/upsugo.c     int g_UPS_SHELL=e_INVALID_SHELL;
g_command_verb   variable     54 src/upsugo.c     int g_command_verb = 0;
last_command     variable    390 src/upsugo.c     t_upslst_item *last_command = 0;
reqchainbuf      variable    272 src/upsugo.c     static char reqchainbuf[512];
set_O_value      macro       247 src/upsugo.c     #define set_O_value( ELEMENT , ARG ) \
set_value        macro       203 src/upsugo.c     #define set_value( ELEMENT , ARG ) \
set_value_nop    macro       223 src/upsugo.c     #define set_value_nop( ELEMENT , ARG ) \
ugo_commands     variable    389 src/upsugo.c     t_upslst_item *ugo_commands = 0;
ugo_old2newquals function    708 src/upsugo.c     ugo_old2newquals( const char *inaddr, int declflag ) {
upsugo_bldcmd    function   1505 src/upsugo.c     t_upsugo_command *upsugo_bldcmd(char * const cmdstr,char * const validopts)
upsugo_blddb     function    645 src/upsugo.c     int upsugo_blddb(struct ups_command * const uc, char * inaddr)
upsugo_bldfvr    function    412 src/upsugo.c     int upsugo_bldfvr(struct ups_command * const uc)
upsugo_bldqual   function    772 src/upsugo.c     int upsugo_bldqual(struct ups_command * const uc, char * const inaddr)
upsugo_dump      function   1239 src/upsugo.c     int upsugo_dump (struct ups_command * const uc,
upsugo_env       function   1428 src/upsugo.c     t_upsugo_command *upsugo_env(char * const product,char * const validopts)
upsugo_free      function   1146 src/upsugo.c     int upsugo_free (struct ups_command * const uc)
upsugo_free_ugo_db function   1209 src/upsugo.c     void upsugo_free_ugo_db( t_upslst_item * const ugo_db ) 
upsugo_getarg    function    975 src/upsugo.c     char * upsugo_getarg( const int argc, char *argv[], char ** const argbuf)
upsugo_getenv    function   1402 src/upsugo.c     char *upsugo_getenv( char * const prod_name )
upsugo_ifornota  function    541 src/upsugo.c     int upsugo_ifornota(struct ups_command * const uc)
upsugo_liststart function    943 src/upsugo.c     void upsugo_liststart(t_upsugo_command * const a_command_line)
upsugo_next      function   1559 src/upsugo.c     t_upsugo_command *upsugo_next(const int old_argc,
upsugo_prtdb     function   1354 src/upsugo.c     void upsugo_prtdb( t_upslst_item * const list_ptr , char * const title ,
upsugo_prtlst    function   1313 src/upsugo.c     void upsugo_prtlst( t_upslst_item * const list_ptr , char * const title ,
upsugo_rearg     function   1067 src/upsugo.c     int upsugo_rearg(const int argc_old,char *argv_old[],int * const argc_new,char *argv_new[])
upsugo_setshell  function    504 src/upsugo.c     void upsugo_setshell(struct ups_command * const uc)
ups_configure    function     61 src/ups_configure.c t_upslst_item *ups_configure(const t_upsugo_command * const a_command_line,
ups_stop         function     61 src/ups_stop.c   t_upslst_item *ups_stop(const t_upsugo_command * const a_command_line,
CMPATOM          macro       178 src/upstbl.c     #define CMPATOM( x, y ) ((x) != (y))
HASHATOM         macro       179 src/upstbl.c     #define HASHATOM( k ) ((unsigned int)(k)>>2)
NELEMS           macro        36 src/upstbl.c     #define NELEMS(x) ((sizeof (x))/(sizeof ((x)[0])))
atom             struct       38 src/upstbl.c     static struct atom {
buckets          variable     42 src/upstbl.c     } *buckets[2048];
len              member       40 src/upstbl.c     int len;
link             member       39 src/upstbl.c     struct atom *link;
scatter          variable     44 src/upstbl.c     static unsigned int scatter[] = {
str              member       41 src/upstbl.c     char *str;
upstbl_atom_int  function     97 src/upstbl.c     const char *upstbl_atom_int( const int n ) 
upstbl_atom_length function    156 src/upstbl.c     int upstbl_atom_length( const char * const str ) 
upstbl_atom_new  function    118 src/upstbl.c     const char *upstbl_atom_new( const char * const str, 
upstbl_atom_string function     90 src/upstbl.c     const char *upstbl_atom_string( const char * const str ) 
upstbl_dump      function    371 src/upstbl.c     void upstbl_dump( t_upstbl * const table, const int iopt )
upstbl_free      function    323 src/upstbl.c     void upstbl_free( t_upstbl ** const table ) 
upstbl_get       function    204 src/upstbl.c     void *upstbl_get( t_upstbl * const table, const void * const key ) 
upstbl_length    function    250 src/upstbl.c     int upstbl_length( t_upstbl * const table ) 
upstbl_map       function    257 src/upstbl.c     void upstbl_map( t_upstbl * const table,
upstbl_new       function    181 src/upstbl.c     t_upstbl *upstbl_new( int hint )
upstbl_put       function    220 src/upstbl.c     void *upstbl_put( t_upstbl * const table, const void * const key, void * const value ) 
upstbl_remove    function    279 src/upstbl.c     void *upstbl_remove( t_upstbl * const table, 
upstbl_to_array  function    303 src/upstbl.c     void **upstbl_to_array( t_upstbl * const table, void * const end ) 
upstbl_trim      function    340 src/upstbl.c     void upstbl_trim( t_upstbl * const table ) 
IS_IN_PROD_DIR   macro        57 src/ups_get.c    #define IS_IN_PROD_DIR() \
get_files        function    139 src/ups_get.c    static void get_files(const t_upstyp_matched_product * const a_mproduct,
ups_get          function     79 src/ups_get.c    t_upslst_item *ups_get(const t_upsugo_command * const a_command_line,
ups_setup        function     63 src/ups_setup.c  t_upslst_item *ups_setup(const t_upsugo_command * const a_command_line,
G_BUFSIZE        macro        50 src/upserr.c     #define G_BUFSIZE 2000
G_ERROR_BUF_MAX  macro        52 src/upserr.c     #define G_ERROR_BUF_MAX 100
G_ERROR_INIT     macro        51 src/upserr.c     #define G_ERROR_INIT -1
UPS_ERROR        variable     36 src/upserr.c     int UPS_ERROR = UPS_SUCCESS; /* start out with no errors */
UPS_VERBOSE      variable     37 src/upserr.c     int UPS_VERBOSE = 0; /* start out not verbose */
UPS_VERIFY       variable     38 src/upserr.c     int UPS_VERIFY = 0;
g_buf_counter    variable     54 src/upserr.c     static int g_buf_counter = G_ERROR_INIT; /* pointer to current message */
g_buf_start      variable     55 src/upserr.c     static int g_buf_start = G_ERROR_INIT; /* pointer to oldest message */
g_error_ascii    variable    138 src/upserr.c     char *g_error_ascii[] = {
g_error_buf      variable     57 src/upserr.c     static char *g_error_buf[G_ERROR_BUF_MAX];
g_error_messages variable     60 src/upserr.c     static char *g_error_messages[UPS_NERR] = {
g_ups_file       variable     40 src/upserr.c     char *g_ups_file = '\0';
g_ups_line       variable     39 src/upserr.c     int g_ups_line = 0;
upserr_add       function    231 src/upserr.c     void upserr_add (const int a_error_index, ...)
upserr_backup    function    304 src/upserr.c     void upserr_backup (void)
upserr_clear     function    338 src/upserr.c     void upserr_clear (void)
upserr_output    function    375 src/upserr.c     void upserr_output (void)
upslst_add       function    180 src/upslst.c     t_upslst_item *upslst_add( t_upslst_item *list_ptr, void * const data_ptr )
upslst_add_list  function    312 src/upslst.c     t_upslst_item *upslst_add_list( t_upslst_item * const list_ptr_1,
upslst_copy      function    380 src/upslst.c     t_upslst_item *upslst_copy( t_upslst_item * const list_ptr )
upslst_count     function    445 src/upslst.c     int upslst_count( t_upslst_item * const list_ptr )
upslst_delete    function    218 src/upslst.c     t_upslst_item *upslst_delete( t_upslst_item * const list_ptr,
upslst_delete_safe function    267 src/upslst.c     t_upslst_item *upslst_delete_safe( t_upslst_item * const list_ptr,
upslst_find      function    467 src/upslst.c     t_upslst_item *upslst_find( t_upslst_item * const list_ptr, 
upslst_first     function    405 src/upslst.c     t_upslst_item *upslst_first( t_upslst_item * const list_ptr )
upslst_free      function    103 src/upslst.c     t_upslst_item *upslst_free( t_upslst_item * const list_ptr, const char copt )
upslst_insert    function    140 src/upslst.c     t_upslst_item *upslst_insert( t_upslst_item * list_ptr, void * const data_ptr )
upslst_insert_list function    345 src/upslst.c     t_upslst_item *upslst_insert_list( t_upslst_item * const list_ptr_1,
upslst_last      function    425 src/upslst.c     t_upslst_item *upslst_last( t_upslst_item * const list_ptr )
upslst_new       function     75 src/upslst.c     t_upslst_item *upslst_new( void * const data_ptr )
upslst_sort0     function    493 src/upslst.c     t_upslst_item *upslst_sort0( t_upslst_item * const list_ptr,
ACTION_PARAMS    macro       148 src/upsact.c     #define ACTION_PARAMS \
ACT_PREFIX       macro       218 src/upsact.c     #define ACT_PREFIX "UPSACT: "
CATMANPAGES      macro        89 src/upsact.c     #define CATMANPAGES "catman"
CHECK_FOR_PATH   macro       244 src/upsact.c     #define CHECK_FOR_PATH(thePath, theDelimiter) \
CHECK_NUM_PARAM  macro       207 src/upsact.c     #define CHECK_NUM_PARAM(action) \
CLOSE_PAREN      macro        74 src/upsact.c     #define CLOSE_PAREN ')'
COMMA            macro        72 src/upsact.c     #define COMMA ','
CONTINUE         macro        78 src/upsact.c     #define CONTINUE "CONTINUE"
CSH_OUTPUT_LAST_PART_OPT macro       295 src/upsact.c     #define CSH_OUTPUT_LAST_PART_OPT() \
DATE_FLAG        macro        87 src/upsact.c     #define DATE_FLAG "DATE"
DO_CHECK         macro        81 src/upsact.c     #define DO_CHECK 1
DO_EXIT          macro        84 src/upsact.c     #define DO_EXIT 1
DO_NO_UPS_ENV    macro        85 src/upsact.c     #define DO_NO_UPS_ENV 1
DO_SYSTEM_MOVE   macro       303 src/upsact.c     #define DO_SYSTEM_MOVE(move_flag) \
DO_UPS_ENV       macro        86 src/upsact.c     #define DO_UPS_ENV 0
DQUOTE           macro        71 src/upsact.c     #define DQUOTE '"'
DROPIT           macro        91 src/upsact.c     #define DROPIT upsact_dropit_buf
EXIT             macro        77 src/upsact.c     #define EXIT "EXIT"
FPRINTF_ERROR    macro       263 src/upsact.c     #define FPRINTF_ERROR() \
GET_DELIMITER    macro       228 src/upsact.c     #define GET_DELIMITER() \
GET_ERR_MESSAGE  macro       256 src/upsact.c     #define GET_ERR_MESSAGE(msg_ptr) \
GET_FLAGS        macro       267 src/upsact.c     #define GET_FLAGS() \
GET_UPS_ENV      macro       279 src/upsact.c     #define GET_UPS_ENV() \
MANPAGES         macro        90 src/upsact.c     #define MANPAGES "man"
MAXIFDEPTH       macro      2197 src/upsact.c     #define MAXIFDEPTH 20
NO_CHECK         macro        82 src/upsact.c     #define NO_CHECK 0
NO_EXIT          macro        83 src/upsact.c     #define NO_EXIT 0
NO_UPS_ENV       macro        80 src/upsact.c     #define NO_UPS_ENV "NO_UPS_ENV"
OLD_FLAG         macro        88 src/upsact.c     #define OLD_FLAG "OLD"
OPEN_PAREN       macro        73 src/upsact.c     #define OPEN_PAREN '('
OUTPUT_ACTION_INFO macro       199 src/upsact.c     #define OUTPUT_ACTION_INFO(severity, minst) \
OUTPUT_VERBOSE_MESSAGE macro       220 src/upsact.c     #define OUTPUT_VERBOSE_MESSAGE(cmd) \
P_VERB_s         macro       321 src/upsact.c     #define P_VERB_s( iver, str ) \
P_VERB_s_s       macro       325 src/upsact.c     #define P_VERB_s_s( iver, str1, str2 ) \
P_VERB_s_s_s     macro       330 src/upsact.c     #define P_VERB_s_s_s( iver, str1, str2, str3 ) \
P_VERB_s_s_s_s   macro       336 src/upsact.c     #define P_VERB_s_s_s_s( iver, str1, str2, str3, str4 ) \
P_VERB_s_s_s_s_s macro       343 src/upsact.c     #define P_VERB_s_s_s_s_s( iver, str1, str2, str3, str4, str5 ) \
SET_NO_ACTION_ERROR macro       317 src/upsact.c     #define SET_NO_ACTION_ERROR( str ) \
SET_PARSE_ERROR  macro       313 src/upsact.c     #define SET_PARSE_ERROR( str ) \
SET_SETUP_PROD   macro       300 src/upsact.c     #define SET_SETUP_PROD() \
SHUTUP           macro       196 src/upsact.c     #define SHUTUP \
SH_OUTPUT_LAST_PART_OPT macro       290 src/upsact.c     #define SH_OUTPUT_LAST_PART_OPT() \
SLASH            macro        75 src/upsact.c     #define SLASH "/"
UPS_ENV          macro        79 src/upsact.c     #define UPS_ENV "UPS_ENV"
WSPACE           macro        76 src/upsact.c     #define WSPACE " \t\n\r\f"
actitem2str      function   2395 src/upsact.c     char *actitem2str( const t_upsact_item *const p_act_itm )
bit_bucket       variable    364 src/upsact.c     static long bit_bucket = 0;
cmp_ugo_db       function   2026 src/upsact.c     int cmp_ugo_db( const void * const d1, const void * const d2 )
copy_act_item    function   2070 src/upsact.c     t_upsact_item *copy_act_item( const t_upsact_item * const act_itm )
csh_output_first_check function   3217 src/upsact.c     static int csh_output_first_check(const FILE * const a_stream,
csh_output_last_part_req function   3293 src/upsact.c     static int csh_output_last_part_req(const FILE * const a_stream,
csh_output_next_part function   3229 src/upsact.c     static int csh_output_next_part(const FILE * const a_stream,
do_exit_action   function   2355 src/upsact.c     int do_exit_action( const t_upsact_cmd * const a_cmd ) 
f_addalias       function   3068 src/upsact.c     static void f_addalias( ACTION_PARAMS)
f_copycatman     function   2499 src/upsact.c     static void f_copycatman( ACTION_PARAMS)
f_copyhtml       function   2475 src/upsact.c     static void f_copyhtml( ACTION_PARAMS)
f_copyinfo       function   2483 src/upsact.c     static void f_copyinfo( ACTION_PARAMS)
f_copyman        function   2491 src/upsact.c     static void f_copyman( ACTION_PARAMS)
f_copynews       function   2523 src/upsact.c     static void f_copynews( ACTION_PARAMS)
f_dodefaults     function   4123 src/upsact.c     static void f_dodefaults( ACTION_PARAMS)
f_else           function   4100 src/upsact.c     static void f_else( ACTION_PARAMS)
f_endif          function   4052 src/upsact.c     static void f_endif( ACTION_PARAMS)
f_envappend      function   2531 src/upsact.c     static void f_envappend( ACTION_PARAMS)
f_envprepend     function   2588 src/upsact.c     static void f_envprepend( ACTION_PARAMS)
f_envremove      function   2646 src/upsact.c     static void f_envremove( ACTION_PARAMS)
f_envset         function   2729 src/upsact.c     static void f_envset( ACTION_PARAMS)
f_envsetifnotset function   2767 src/upsact.c     static void f_envsetifnotset( ACTION_PARAMS)
f_envunset       function   2807 src/upsact.c     static void f_envunset( ACTION_PARAMS)
f_exeaccess      function   2843 src/upsact.c     static void f_exeaccess( ACTION_PARAMS)
f_execute        function   2895 src/upsact.c     static void f_execute( ACTION_PARAMS)
f_filetest       function   2956 src/upsact.c     static void f_filetest( ACTION_PARAMS)
f_if             function   3976 src/upsact.c     static void f_if( ACTION_PARAMS)
f_pathappend     function   3001 src/upsact.c     static void f_pathappend( ACTION_PARAMS)
f_pathprepend    function   3017 src/upsact.c     static void f_pathprepend( ACTION_PARAMS)
f_pathremove     function   3033 src/upsact.c     static void f_pathremove( ACTION_PARAMS)
f_pathset        function   3048 src/upsact.c     static void f_pathset( ACTION_PARAMS)
f_proddir        function   3846 src/upsact.c     static void f_proddir( ACTION_PARAMS)
f_setupenv       function   3803 src/upsact.c     static void f_setupenv( ACTION_PARAMS)
f_sourcecompileopt function   3364 src/upsact.c     static void f_sourcecompileopt( ACTION_PARAMS)
f_sourcecompilereq function   3311 src/upsact.c     static void f_sourcecompilereq( ACTION_PARAMS)
f_sourceoptcheck function   3592 src/upsact.c     static void f_sourceoptcheck( ACTION_PARAMS)
f_sourceoptional function   3474 src/upsact.c     static void f_sourceoptional( ACTION_PARAMS)
f_sourcereqcheck function   3531 src/upsact.c     static void f_sourcereqcheck( ACTION_PARAMS)
f_sourcerequired function   3414 src/upsact.c     static void f_sourcerequired( ACTION_PARAMS)
f_unalias        function   3123 src/upsact.c     static void f_unalias( ACTION_PARAMS)
f_uncopycatman   function   2515 src/upsact.c     static void f_uncopycatman( ACTION_PARAMS)
f_uncopyman      function   2507 src/upsact.c     static void f_uncopyman( ACTION_PARAMS)
f_unless         function   4014 src/upsact.c     static void f_unless( ACTION_PARAMS)
f_unproddir      function   3942 src/upsact.c     static void f_unproddir( ACTION_PARAMS)
f_unsetupenv     function   3817 src/upsact.c     static void f_unsetupenv( ACTION_PARAMS)
f_writecompilescript function   3648 src/upsact.c     static void f_writecompilescript(ACTION_PARAMS)
find_prod_name   function   2011 src/upsact.c     t_upsact_item *find_prod_name( t_upslst_item* const dep_list,
g_ACTPARAM       macro      3065 src/upsact.c     #define g_ACTPARAM "%s"
g_COMPILE_FLAG   variable     62 src/upsact.c     int g_COMPILE_FLAG = 0;
g_CSHPARAM       macro      3066 src/upsact.c     #define g_CSHPARAM "\\!*" /* DjF added another \ need \ too! */
g_LOCAL_VARS_DEF variable     59 src/upsact.c     int g_LOCAL_VARS_DEF = 0;
g_SHPARAM        macro      3064 src/upsact.c     #define g_SHPARAM "\"$@\""
g_act_itm        variable    373 src/upsact.c     static t_upsact_item *g_act_itm;
g_buff           variable    359 src/upsact.c     static char g_buff[MAX_LINE_LEN];
g_cmd_info       variable    387 src/upsact.c     t_cmd_info g_cmd_info[] = {
g_cshDelimiter   variable    363 src/upsact.c     static char *g_cshDelimiter = " ";
g_cshPath        variable    361 src/upsact.c     static char *g_cshPath = "path";
g_default_delimiter variable    355 src/upsact.c     static char *g_default_delimiter = ":";
g_file_ext       variable     65 src/upsact.c     static char *g_file_ext[e_MAX_SHELL] = {"sh", "csh"};
g_func_info      variable    440 src/upsact.c     t_cmd_map g_func_info[] = {
g_keep_temp_file variable     60 src/upsact.c     int g_keep_temp_file = 0;
g_prod_done      variable    370 src/upsact.c     static t_upslst_item *g_prod_done = 0;
g_shDelimiter    variable    362 src/upsact.c     static char *g_shDelimiter = ":";
g_shPath         variable    360 src/upsact.c     static char *g_shPath = "PATH";
g_space_delimiter variable    356 src/upsact.c     static char *g_space_delimiter = " ";
g_temp_file_name variable     61 src/upsact.c     char *g_temp_file_name = NULL;
g_top_unsetup    variable    358 src/upsact.c     static int g_top_unsetup = 0;
g_ugo_cmd        variable    367 src/upsact.c     static t_upsugo_command *g_ugo_cmd = 0;
g_ups_cmd        variable    357 src/upsact.c     static int g_ups_cmd = e_invalid_action;
get_SETUP_prod   function   1740 src/upsact.c     t_upsugo_command *get_SETUP_prod( t_upsact_cmd * const p_cmd, 
get_act          function   1800 src/upsact.c     t_upstyp_action *get_act( const t_upsugo_command * const ugo_cmd,
get_dependent    function   1840 src/upsact.c     t_upsugo_command *get_dependent( t_upsact_cmd *const p_cmd,
get_top_item     function   1932 src/upsact.c     t_upsact_item *get_top_item( t_upsugo_command * const ugo_cmd,
ifcount          variable   3974 src/upsact.c     static int ifcount = 0;
ifstack          variable   3973 src/upsact.c     static char *ifstack[256] = {""};
is_prod_done     function   2000 src/upsact.c     int is_prod_done( const char *const prod_name )
merge_ugo_db     function   2038 src/upsact.c     t_upslst_item* merge_ugo_db( t_upslst_item * const l_db1,
new_act_item     function   2099 src/upsact.c     t_upsact_item *new_act_item( t_upsugo_command * const ugo_cmd,
new_default_action function   2161 src/upsact.c     t_upstyp_action *new_default_action( t_upsact_item *const p_act_itm, 
next_cmd         function   1334 src/upsact.c     t_upslst_item *next_cmd( t_upslst_item * const top_list,
next_top_prod    function   1193 src/upsact.c     t_upslst_item *next_top_prod( t_upslst_item * top_list,
parse_params     function   1649 src/upsact.c     int parse_params( const char * const a_params, char **argv )
reverse_command_list function   2199 src/upsact.c     t_upslst_item *reverse_command_list( t_upsact_item *const p_act_itm, 
sh_output_first_check function   3159 src/upsact.c     static int sh_output_first_check(const FILE * const a_stream,
sh_output_last_part_req function   3275 src/upsact.c     static int sh_output_last_part_req(const FILE * const a_stream,
sh_output_next_part function   3171 src/upsact.c     static int sh_output_next_part(const FILE * const a_stream,
shutup           function   4232 src/upsact.c     static void shutup( ACTION_PARAMS)
upsact_action2enum function   1049 src/upsact.c     int upsact_action2enum( const char * const act_name )
upsact_check_files function   1077 src/upsact.c     t_upslst_item *upsact_check_files(
upsact_cleanup   function    895 src/upsact.c     void upsact_cleanup( t_upslst_item *dep_list )
upsact_dropit_buf variable     93 src/upsact.c     char upsact_dropit_buf[2048] = "$UPS_DIR/bin/dropit -e";
upsact_free_act_cmd function   1007 src/upsact.c     void upsact_free_act_cmd( t_upsact_cmd * const act_cmd )
upsact_free_act_item function   1013 src/upsact.c     void upsact_free_act_item( t_upsact_item * const act_itm ) 
upsact_get_cmd   function    710 src/upsact.c     t_upslst_item *upsact_get_cmd( t_upsugo_command * const ugo_cmd,
upsact_get_dep   function    649 src/upsact.c     t_upslst_item *upsact_get_dep( t_upsugo_command * const ugo_cmd,
upsact_new_upsact_cmd function    986 src/upsact.c     t_upsact_cmd *upsact_new_upsact_cmd( const char * const act_str )
upsact_parse_cmd function    798 src/upsact.c     t_upsact_cmd *upsact_parse_cmd( const char * const cmd_str )
upsact_print     function    512 src/upsact.c     int upsact_print( t_upsugo_command * const ugo_cmd,
upsact_print_cmd function    955 src/upsact.c     void upsact_print_cmd( const t_upsact_cmd * const cmd_cur )
upsact_print_item function    925 src/upsact.c     void upsact_print_item( const t_upsact_item *const act_itm, 
upsact_process_commands function   2448 src/upsact.c     void upsact_process_commands( const t_upslst_item * const a_cmd_list,
upsact_trim_unsetup function    767 src/upsact.c     t_upslst_item *upsact_trim_unsetup( t_upslst_item * const act_list,
ups_unconfigure  function     61 src/ups_unconfigure.c t_upslst_item *ups_unconfigure( const t_upsugo_command * const a_command_line,
P_VERB           macro       212 src/upsfil.c     #define P_VERB( iver, str ) \
P_VERB_s         macro       216 src/upsfil.c     #define P_VERB_s( iver, str ) \
P_VERB_s_i       macro       220 src/upsfil.c     #define P_VERB_s_i( iver, str1, num ) \
P_VERB_s_i_s     macro       224 src/upsfil.c     #define P_VERB_s_i_s( iver, str1, num, str2 ) \
P_VERB_s_i_s_nn  macro       228 src/upsfil.c     #define P_VERB_s_i_s_nn( iver, str1, num, str2 ) \
P_VERB_s_i_s_s_s macro       232 src/upsfil.c     #define P_VERB_s_i_s_s_s( iver, str1, num, str2, str3, str4 ) \
QUOTES           macro       186 src/upsfil.c     #define QUOTES "\"\'"
SEPARATION_LINE  macro       189 src/upsfil.c     #define SEPARATION_LINE "#*************************************************\n#"
WCHARS           macro       185 src/upsfil.c     #define WCHARS " \t\n\r\f"
WCHARSQ          macro       187 src/upsfil.c     #define WCHARSQ " \t\n\r\f\"\'"
action_cmp       function   2414 src/upsfil.c     int action_cmp ( const void * const d1, 
add_to_action_list function   2310 src/upsfil.c     t_upslst_item *add_to_action_list( t_upslst_item * const list_to,
add_to_instance  function   2262 src/upsfil.c     int add_to_instance( t_upstyp_instance * const inst,
cfilei           function   2208 src/upsfil.c     int cfilei( void )
clear_journal_file function    487 src/upsfil.c     void clear_journal_file( const void *key, void ** prod, void *cl ) 
cmp_actions      function   2425 src/upsfil.c     int cmp_actions( t_upslst_item *l_ptr1, 
e_group_count    enumerator   63 src/upsfil.c     e_group_count = 9,
e_group_items    enumerator   64 src/upsfil.c     e_group_items = 7
e_key_eof        enumerator  182 src/upsfil.c     e_key_eof = -1
e_key_eol        enumerator  181 src/upsfil.c     e_key_eol = -2,
find_common_mask function   2372 src/upsfil.c     int *find_common_mask( t_upstyp_instance * const inst1,
find_common_mask_list function   2332 src/upsfil.c     int *find_common_mask_list( t_upslst_item *l_inst,
find_group       function   2480 src/upsfil.c     t_upslst_item *find_group( t_upslst_item * const list_ptr, 
find_start_key   function   1737 src/upsfil.c     int find_start_key( void )
flush_product    function    776 src/upsfil.c     void flush_product( const void *key, void ** prod, void *cl ) 
g_call_cache_count variable    209 src/upsfil.c     static int g_call_cache_count = 0; /* # times cache is used */
g_call_count     variable    210 src/upsfil.c     static int g_call_count = 0; /* # times read_file is called */
g_fh             variable    192 src/upsfil.c     static FILE *g_fh = 0; /* file handle */
g_file_cache     function    825 src/upsfil.c     t_upstbl *g_file_cache( void )
g_filename       variable    203 src/upsfil.c     static char g_filename[MAX_LINE_LEN] = "";
g_ft             variable    208 src/upsfil.c     static t_upstbl *g_ft = 0; /* pointer to file cache */
g_groups         variable     66 src/upsfil.c     static int g_groups[ e_group_count ][ e_group_items ] = 
g_ifile          variable    200 src/upsfil.c     static int g_ifile = e_file_unknown; /* current file type as enum */
g_ikey           variable    199 src/upsfil.c     static int g_ikey = e_key_unknown; /* current key as enum */ 
g_imargin        variable    202 src/upsfil.c     static int g_imargin = 0;
g_item_count     variable    204 src/upsfil.c     static int g_item_count = 0;
g_key            variable    195 src/upsfil.c     static char g_key[MAX_LINE_LEN] = ""; /* current key */
g_line           variable    194 src/upsfil.c     static char g_line[MAX_LINE_LEN] = ""; /* current line */
g_line_count     variable    205 src/upsfil.c     static int g_line_count = 0;
g_mkey           variable    198 src/upsfil.c     static t_upskey_map *g_mkey = 0; /* current map */
g_pd             variable    191 src/upsfil.c     static t_upstyp_product *g_pd = 0; /* current product to fill */
g_print_product  function   2640 src/upsfil.c     void g_print_product( t_upstyp_product * const prod_ptr )
g_subdir_base    variable    100 src/upsfil.c     static const char *g_subdir_base;
g_subdir_buf     variable     99 src/upsfil.c     static char g_subdir_buf[PATH_MAX];
g_subdir_files_flag variable    174 src/upsfil.c     int g_subdir_files_flag = 0;
g_tval           variable    197 src/upsfil.c     static char *g_tval = 0; /* current translated value */
g_use_cache      variable    207 src/upsfil.c     static int g_use_cache = 1; /* turn on/off use of cache */
g_val            variable    196 src/upsfil.c     static char g_val[MAX_LINE_LEN] = ""; /* current value */
get_key          function   1814 src/upsfil.c     int get_key( void )
is_start_key     function   2174 src/upsfil.c     int is_start_key( void )
is_stop_key      function   2192 src/upsfil.c     int is_stop_key( void )
next_key         function   1760 src/upsfil.c     int next_key( int ignore_unknown )
print_action     function   2620 src/upsfil.c     void print_action( t_upstyp_action * const act_ptr )
print_instance   function   2571 src/upsfil.c     void print_instance( t_upstyp_instance * const inst_ptr )
put_group        function   1894 src/upsfil.c     int put_group( t_upslst_item * const l_inst, 
put_head_keys    function   1941 src/upsfil.c     int put_head_keys( int * ikeys ) 
put_inst_keys    function   1980 src/upsfil.c     int put_inst_keys( int * ikeys, 
put_inst_keys_mask function   2058 src/upsfil.c     int put_inst_keys_mask( int * ikeys, 
put_key          function   2142 src/upsfil.c     int put_key( const char * const key, const char * const val )
read_action      function   1546 src/upsfil.c     t_upstyp_action *read_action( void )
read_actions     function   1518 src/upsfil.c     t_upslst_item *read_actions( void )
read_comments    function   1102 src/upsfil.c     t_upslst_item *read_comments( void )
read_common      function   1425 src/upsfil.c     t_upstyp_instance *read_common( void )
read_config      function   1586 src/upsfil.c     t_upstyp_config *read_config( void )
read_file        function   1039 src/upsfil.c     int read_file( void )
read_file_desc   function   1166 src/upsfil.c     int read_file_desc( void )
read_file_type   function   1131 src/upsfil.c     int read_file_type( void )
read_group       function   1667 src/upsfil.c     t_upslst_item *read_group( void )
read_groups      function   1632 src/upsfil.c     t_upslst_item *read_groups( void )
read_instance    function   1306 src/upsfil.c     t_upstyp_instance *read_instance( void )
read_instances   function   1274 src/upsfil.c     t_upslst_item *read_instances( void )
start_file       function    523 src/upsfil.c     start_file(const char *ups_file) {
trim_cache       function   2236 src/upsfil.c     void trim_cache( void )
trim_qualifiers  function   2242 src/upsfil.c     int trim_qualifiers( char * const str )
upsfil_clear_journal_files function    512 src/upsfil.c     int upsfil_clear_journal_files( void )
upsfil_exist     function    762 src/upsfil.c     int upsfil_exist( const char * const ups_file )
upsfil_flush     function    791 src/upsfil.c     void upsfil_flush( void )
upsfil_is_in_cache function    745 src/upsfil.c     t_upstyp_product *upsfil_is_in_cache( const char * const ups_file )
upsfil_last_file function    738 src/upsfil.c     const char *upsfil_last_file( void )
upsfil_read_dir  function    244 src/upsfil.c     t_upstyp_product *upsfil_read_dir( const char * const ups_dir ) {
upsfil_read_file function    302 src/upsfil.c     t_upstyp_product *upsfil_read_file( const char * const ups_file )
upsfil_stat      function    810 src/upsfil.c     void upsfil_stat( const int iopt )
upsfil_write_file function    557 src/upsfil.c     int upsfil_write_file( t_upstyp_product * const prod_ptr,
upsfil_write_journal_files function    470 src/upsfil.c     int upsfil_write_journal_files( void )
verify_groups    function   1232 src/upsfil.c     void verify_groups(t_upslst_item *l_ptr,t_upslst_item *n_ptr)
verify_keys      function   1199 src/upsfil.c     void verify_keys(t_upslst_item *l_ptr, t_upstyp_instance *inst_ptr)
write_action     function   1010 src/upsfil.c     int write_action( t_upstyp_action * const act_ptr )
write_chain_file function    889 src/upsfil.c     int write_chain_file( void )
write_journal_file function    398 src/upsfil.c     void write_journal_file( const void *key, void ** prod, void *cl ) 
write_table_file function    942 src/upsfil.c     int write_table_file( void )
write_version_file function    831 src/upsfil.c     int write_version_file( void )
_UPS_START_H_    macro        23 inc/ups_start.h  #define _UPS_START_H_
_UPS_TAILOR_H_   macro        23 inc/ups_tailor.h #define _UPS_TAILOR_H_
_UPS_CONFIGURE_H_ macro        23 inc/ups_configure.h #define _UPS_CONFIGURE_H_
UPSKEY_CONF2ARR  macro       135 inc/upskey.h     #define UPSKEY_CONF2ARR( conf ) (((t_upskey_config_u *)conf)->arr)
UPSKEY_INST2ARR  macro       134 inc/upskey.h     #define UPSKEY_INST2ARR( inst ) (((t_upskey_instance_u *)inst)->arr)
UPSKEY_ISIN_CHAIN macro       139 inc/upskey.h     #define UPSKEY_ISIN_CHAIN( flag ) (flag&0x00000100 ? 1 : 0)
UPSKEY_ISIN_CONFIG macro       140 inc/upskey.h     #define UPSKEY_ISIN_CONFIG( flag ) (flag&0x00001000 ? 1 : 0)
UPSKEY_ISIN_TABLE macro       138 inc/upskey.h     #define UPSKEY_ISIN_TABLE( flag ) (flag&0x00000010 ? 1 : 0)
UPSKEY_ISIN_VERSION macro       137 inc/upskey.h     #define UPSKEY_ISIN_VERSION( flag ) (flag&0x00000001 ? 1 : 0)
UPSKEY_PROD2ARR  macro       133 inc/upskey.h     #define UPSKEY_PROD2ARR( prod ) (((t_upskey_product_u *)prod)->arr)
UPSKEY_TRY_TRANSLATE macro       141 inc/upskey.h     #define UPSKEY_TRY_TRANSLATE( flag ) (flag&0x00010000 ? 1 : 0)
_UPSKEY_H_       macro        23 inc/upskey.h     #define _UPSKEY_H_
arr              member      118 inc/upskey.h     char *arr[e_key_count];
arr              member      123 inc/upskey.h     char *arr[e_key_count];
arr              member      128 inc/upskey.h     char *arr[e_key_count];
c_index          member      112 inc/upskey.h     int c_index; /* index into config structure (t_upstyp_config) */
conf             member      127 inc/upskey.h     t_upstyp_config conf;
e_key_action     enumerator   77 inc/upskey.h     e_key_action,
e_key_archive_file enumerator   64 inc/upskey.h     e_key_archive_file,
e_key_authorized_nodes enumerator   65 inc/upskey.h     e_key_authorized_nodes,
e_key_catman_source_dir enumerator   70 inc/upskey.h     e_key_catman_source_dir,
e_key_catman_target_dir enumerator   82 inc/upskey.h     e_key_catman_target_dir,
e_key_chain      enumerator   43 inc/upskey.h     e_key_chain,
e_key_common     enumerator   94 inc/upskey.h     e_key_common,
e_key_compile_dir enumerator   68 inc/upskey.h     e_key_compile_dir,
e_key_compile_file enumerator   69 inc/upskey.h     e_key_compile_file,
e_key_count      enumerator  100 inc/upskey.h     e_key_count
e_key_db_dir     enumerator   76 inc/upskey.h     e_key_db_dir,
e_key_declared   enumerator   56 inc/upskey.h     e_key_declared,
e_key_declarer   enumerator   55 inc/upskey.h     e_key_declarer,
e_key_description enumerator   66 inc/upskey.h     e_key_description,
e_key_end        enumerator   95 inc/upskey.h     e_key_end,
e_key_file       enumerator   40 inc/upskey.h     e_key_file = 0,
e_key_flavor     enumerator   49 inc/upskey.h     e_key_flavor,
e_key_group      enumerator   93 inc/upskey.h     e_key_group,
e_key_html_source_dir enumerator   71 inc/upskey.h     e_key_html_source_dir,
e_key_html_target_dir enumerator   85 inc/upskey.h     e_key_html_target_dir,
e_key_info_source_dir enumerator   72 inc/upskey.h     e_key_info_source_dir,
e_key_info_target_dir enumerator   83 inc/upskey.h     e_key_info_target_dir,
e_key_man_source_dir enumerator   73 inc/upskey.h     e_key_man_source_dir,
e_key_man_target_dir enumerator   81 inc/upskey.h     e_key_man_target_dir,
e_key_modified   enumerator   58 inc/upskey.h     e_key_modified,
e_key_modifier   enumerator   57 inc/upskey.h     e_key_modifier,
e_key_news_source_dir enumerator   74 inc/upskey.h     e_key_news_source_dir,
e_key_news_target_dir enumerator   84 inc/upskey.h     e_key_news_target_dir,
e_key_origin     enumerator   59 inc/upskey.h     e_key_origin,
e_key_osalias    enumerator   97 inc/upskey.h     e_key_osalias,
e_key_prod_dir   enumerator   60 inc/upskey.h     e_key_prod_dir,
e_key_prod_dir_prefix enumerator   80 inc/upskey.h     e_key_prod_dir_prefix,
e_key_product    enumerator   41 inc/upskey.h     e_key_product,
e_key_qualifiers enumerator   50 inc/upskey.h     e_key_qualifiers,
e_key_setups_dir enumerator   87 inc/upskey.h     e_key_setups_dir,
e_key_statistics enumerator   67 inc/upskey.h     e_key_statistics,
e_key_table_dir  enumerator   62 inc/upskey.h     e_key_table_dir,
e_key_table_file enumerator   63 inc/upskey.h     e_key_table_file,
e_key_unknown    enumerator   99 inc/upskey.h     e_key_unknown,
e_key_upd_usercode_dir enumerator   86 inc/upskey.h     e_key_upd_usercode_dir,
e_key_ups_db_version enumerator   44 inc/upskey.h     e_key_ups_db_version,
e_key_ups_dir    enumerator   61 inc/upskey.h     e_key_ups_dir,
e_key_user_defined enumerator   78 inc/upskey.h     e_key_user_defined,
e_key_version    enumerator   42 inc/upskey.h     e_key_version,
e_key_version_subdir enumerator   88 inc/upskey.h     e_key_version_subdir,
e_upskey_key     enum         39 inc/upskey.h     enum e_upskey_key {
flag             member      113 inc/upskey.h     unsigned int flag; /* flags, see ups_keys.c */
i_index          member      111 inc/upskey.h     int i_index; /* index into instance structure (t_upstyp_instance) */
ikey             member      108 inc/upskey.h     int ikey; /* enum of key (corresponding to e_upskey_key) */
inst             member      122 inc/upskey.h     t_upstyp_instance inst;
key              member      109 inc/upskey.h     char *key; /* string of key */
p_index          member      110 inc/upskey.h     int p_index; /* index into product structure (t_upstyp_product) */
prod             member      117 inc/upskey.h     t_upstyp_product prod;
t_upskey_config_u typedef     129 inc/upskey.h     } t_upskey_config_u;
t_upskey_instance_u typedef     124 inc/upskey.h     } t_upskey_instance_u;
t_upskey_map     typedef     114 inc/upskey.h     } t_upskey_map;
t_upskey_product_u typedef     119 inc/upskey.h     } t_upskey_product_u;
upskey_config_u  union       126 inc/upskey.h     typedef union upskey_config_u {
upskey_instance_u union       121 inc/upskey.h     typedef union upskey_instance_u {
upskey_map       struct      107 inc/upskey.h     typedef struct upskey_map {
upskey_product_u union       116 inc/upskey.h     typedef union upskey_product_u {
_UPS_LIST_H_     macro        23 inc/ups_list.h   #define _UPS_LIST_H_
UPSCPY_PARAMS    macro        40 inc/upscpy.h     #define UPSCPY_PARAMS \
_UPSCPY_H_       macro        23 inc/upscpy.h     #define _UPSCPY_H_
_UPS_GET_H_      macro        23 inc/ups_get.h    #define _UPS_GET_H_
_UPS_STOP_H_     macro        23 inc/ups_stop.h   #define _UPS_STOP_H_
_UPS_MAIN_H_     macro        23 inc/ups_main.h   #define _UPS_MAIN_H_
SETUPENV         macro       136 inc/upsugo.h     #define SETUPENV "SETUP_"
_UPSUGO_H_       macro        23 inc/upsugo.h     #define _UPSUGO_H_
e_BOURNE         enumerator  131 inc/upsugo.h     e_BOURNE = 0,
e_CSHELL         enumerator  132 inc/upsugo.h     e_CSHELL,
e_INVALID_SHELL  enumerator  129 inc/upsugo.h     e_INVALID_SHELL = -1,
e_MAX_SHELL      enumerator  133 inc/upsugo.h     e_MAX_SHELL
e_MIN_SHELL      enumerator  130 inc/upsugo.h     e_MIN_SHELL = 0,
e_shell_type     enum        128 inc/upsugo.h     enum e_shell_type {
t_upsugo_command typedef     123 inc/upsugo.h     } t_upsugo_command;
ugo_A            member       44 inc/upsugo.h     int ugo_A; /* Authorized Host(s) */
ugo_B            member       48 inc/upsugo.h     int ugo_B; /* CODE INCOMPLETE */
ugo_C            member       50 inc/upsugo.h     int ugo_C; /* Don't do Configure */
ugo_D            member       52 inc/upsugo.h     int ugo_D; /* origin file */
ugo_E            member       55 inc/upsugo.h     int ugo_E; /* Run Editor */
ugo_F            member       58 inc/upsugo.h     int ugo_F; /* Return list of files not in product */
ugo_G            member       60 inc/upsugo.h     int ugo_G; /* command line option like O no parse */
ugo_H            member       64 inc/upsugo.h     int ugo_H; /* Gen flavor match list from -f no OS */
ugo_K            member       71 inc/upsugo.h     int ugo_K; /* Keywords */
ugo_L            member       74 inc/upsugo.h     int ugo_L; /* statistics add in verson on declare */
ugo_M            member       77 inc/upsugo.h     int ugo_M; /* Table file directory */
ugo_N            member       80 inc/upsugo.h     int ugo_N; /* and N file */
ugo_O            member       83 inc/upsugo.h     int ugo_O; /* set UPS_OPTIONS to value */
ugo_P            member       87 inc/upsugo.h     int ugo_P; /* Specify a product without a database */
ugo_R            member       94 inc/upsugo.h     int ugo_R; /* for ups depend */
ugo_S            member       96 inc/upsugo.h     int ugo_S; /* Syntax Checking */
ugo_T            member       98 inc/upsugo.h     int ugo_T; /* archive file name */
ugo_U            member      102 inc/upsugo.h     int ugo_U; /* ups directory location */
ugo_V            member      105 inc/upsugo.h     int ugo_V; /* Don't delete temp file(s) */
ugo_W            member      107 inc/upsugo.h     int ugo_W; /* use environment variables */
ugo_X            member      109 inc/upsugo.h     int ugo_X; /* execute instead of echo?? */
ugo_Y            member      111 inc/upsugo.h     int ugo_Y; /* delete home dir, query */
ugo_Z            member      114 inc/upsugo.h     int ugo_Z; /* Time this command */
ugo_a            member       43 inc/upsugo.h     int ugo_a; /* All include */
ugo_anyfile      member       81 inc/upsugo.h     char *ugo_anyfile; 
ugo_archivefile  member       99 inc/upsugo.h     char *ugo_archivefile; 
ugo_auth         member       45 inc/upsugo.h     t_upslst_item *ugo_auth;
ugo_b            member       46 inc/upsugo.h     int ugo_b; /* Compile_file name */
ugo_c            member       49 inc/upsugo.h     int ugo_c; /* current specified */
ugo_chain        member      116 inc/upsugo.h     t_upslst_item *ugo_chain;
ugo_compile_dir  member      101 inc/upsugo.h     char *ugo_compile_dir;
ugo_compile_file member       47 inc/upsugo.h     char *ugo_compile_file;
ugo_d            member       51 inc/upsugo.h     int ugo_d; /* development chain */
ugo_db           member      113 inc/upsugo.h     t_upslst_item *ugo_db;
ugo_description  member       86 inc/upsugo.h     char *ugo_description; 
ugo_dot          member      122 inc/upsugo.h     int ugo_dot; /* had -. option... */
ugo_e            member       54 inc/upsugo.h     int ugo_e; /* Define ups_extended */
ugo_f            member       56 inc/upsugo.h     int ugo_f; /* Flavor(s) specified */
ugo_flavor       member       57 inc/upsugo.h     t_upslst_item *ugo_flavor;
ugo_g            member       59 inc/upsugo.h     int ugo_g; /* Did they request a "special" chain? */
ugo_h            member       62 inc/upsugo.h     int ugo_h; /* Host(s) specified */
ugo_help         member      117 inc/upsugo.h     int ugo_help; /* Help flag */
ugo_host         member       63 inc/upsugo.h     t_upslst_item *ugo_host;
ugo_j            member       68 inc/upsugo.h     int ugo_j; /* applies to top level product */
ugo_k            member       70 inc/upsugo.h     int ugo_k; /* Don't do unsetup first */
ugo_key          member       72 inc/upsugo.h     t_upslst_item *ugo_key;
ugo_l            member       73 inc/upsugo.h     int ugo_l; /* long (listing) */
ugo_m            member       75 inc/upsugo.h     int ugo_m; /* Table file */
ugo_n            member       79 inc/upsugo.h     int ugo_n; /* new chain */
ugo_number       member      119 inc/upsugo.h     int ugo_number; /* -0,-1,-2,etc value offset by +1 */
ugo_o            member       82 inc/upsugo.h     int ugo_o; /* old chain */
ugo_options      member       84 inc/upsugo.h     char *ugo_options; 
ugo_origin       member       53 inc/upsugo.h     char *ugo_origin;
ugo_osname       member       65 inc/upsugo.h     t_upslst_item *ugo_osname; /* user specified os name */
ugo_p            member       85 inc/upsugo.h     int ugo_p; /* Product Description */
ugo_passed       member       61 inc/upsugo.h     char *ugo_passed; /* options passed */
ugo_product      member       41 inc/upsugo.h     char *ugo_product; 
ugo_productdir   member       93 inc/upsugo.h     char *ugo_productdir; 
ugo_q            member       89 inc/upsugo.h     int ugo_q; /* specify the qualifiers */
ugo_qualifiers   member       90 inc/upsugo.h     t_upslst_item *ugo_qualifiers;
ugo_r            member       92 inc/upsugo.h     int ugo_r; /* set product dir to value */
ugo_reqchain     member      121 inc/upsugo.h     char *ugo_reqchain; /* original chain -g string -- with -g */
ugo_reqqualifiers member      120 inc/upsugo.h     char *ugo_reqqualifiers; /* original qualifier -q string */
ugo_s            member       95 inc/upsugo.h     int ugo_s; /* simulate */
ugo_shell        member      118 inc/upsugo.h     int ugo_shell; /* shell variant that the user has */
ugo_t            member       97 inc/upsugo.h     int ugo_t; /* test chain */
ugo_tablefile    member       78 inc/upsugo.h     char *ugo_tablefile; 
ugo_tablefiledir member       76 inc/upsugo.h     char *ugo_tablefiledir; 
ugo_u            member      100 inc/upsugo.h     int ugo_u; /* compile file dir */
ugo_upsdir       member      103 inc/upsugo.h     char *ugo_upsdir; 
ugo_v            member      104 inc/upsugo.h     int ugo_v; /* verbose */
ugo_version      member       42 inc/upsugo.h     char *ugo_version; 
ugo_w            member      106 inc/upsugo.h     int ugo_w; /* stop first then start */
ugo_x            member      108 inc/upsugo.h     int ugo_x; /* CODE INCOMPLETE */
ugo_y            member      110 inc/upsugo.h     int ugo_y; /* delete home dir, no query */
ugo_z            member      112 inc/upsugo.h     int ugo_z; /* Database(s) were specified */
ups_command      struct       39 inc/upsugo.h     typedef struct ups_command
_UPS_VERIFY_H_   macro        23 inc/ups_verify.h #define _UPS_VERIFY_H_
_UPSHLP_H_       macro        23 inc/upshlp.h     #define _UPSHLP_H_
_UPSVER_H_       macro        22 inc/upsver.h     #define _UPSVER_H_
_UPSTBL_H_       macro        23 inc/upstbl.h     #define _UPSTBL_H_
binding          struct       29 inc/upstbl.h     struct binding {
buckets          member       33 inc/upstbl.h     } **buckets;
key              member       31 inc/upstbl.h     const void *key;
length           member       27 inc/upstbl.h     int length;
link             member       30 inc/upstbl.h     struct binding *link;
size             member       26 inc/upstbl.h     int size;
t_upstbl         typedef      34 inc/upstbl.h     } t_upstbl;
timestamp        member       28 inc/upstbl.h     unsigned timestamp;
upstbl           struct       25 inc/upstbl.h     typedef struct upstbl {
value            member       32 inc/upstbl.h     void *value;
_UPSLST_H_       macro        44 inc/upslst.h     #define _UPSLST_H_
data             member       60 inc/upslst.h     void *data;
next             member       61 inc/upslst.h     struct upslst_item *next;
prev             member       59 inc/upslst.h     struct upslst_item *prev;
t_upslst_item    typedef      62 inc/upslst.h     } t_upslst_item;
upslst_item      struct       57 inc/upslst.h     typedef struct upslst_item
_UPS_FLAVOR_H_   macro        22 inc/ups_flavor.h #define _UPS_FLAVOR_H_
_UPS_SETUP_H_    macro        23 inc/ups_setup.h  #define _UPS_SETUP_H_
MAXALIGN         macro        51 inc/upsmem.h     #define MAXALIGN (sizeof(UALIGN))
UALIGN           macro        52 inc/upsmem.h     #define UALIGN(x) ((((x)+MAXALIGN-1)/MAXALIGN)*MAXALIGN)
UALIGN           typedef      49 inc/upsmem.h     } UALIGN;
_Align           union        38 inc/upsmem.h     typedef union _Align {
_UPSMEM_H_       macro        23 inc/upsmem.h     #define _UPSMEM_H_
filler_1         member       39 inc/upsmem.h     char filler_1;
filler_10        member       48 inc/upsmem.h     int (*filler_10)(void);
filler_2         member       40 inc/upsmem.h     char *filler_2;
filler_3         member       41 inc/upsmem.h     short filler_3;
filler_4         member       42 inc/upsmem.h     long filler_4;
filler_5         member       43 inc/upsmem.h     int filler_5;
filler_6         member       44 inc/upsmem.h     int *filler_6;
filler_7         member       45 inc/upsmem.h     double filler_7;
filler_8         member       46 inc/upsmem.h     float filler_8;
filler_9         member       47 inc/upsmem.h     void *filler_9;
UPS_ACTION_PARSE macro        79 inc/upserr.h     #define UPS_ACTION_PARSE 36
UPS_ACTION_PARSE_INVALID macro       106 inc/upserr.h     #define UPS_ACTION_PARSE_INVALID 63
UPS_ACTION_WRITE_ERROR macro        69 inc/upserr.h     #define UPS_ACTION_WRITE_ERROR 26
UPS_COMMAND_FAILED macro       110 inc/upserr.h     #define UPS_COMMAND_FAILED 67
UPS_DANGLING_CHAIN macro       115 inc/upserr.h     #define UPS_DANGLING_CHAIN 72
UPS_DB_CORRUPTION macro       111 inc/upserr.h     #define UPS_DB_CORRUPTION 68
UPS_DUPLICATE_INSTANCE macro        85 inc/upserr.h     #define UPS_DUPLICATE_INSTANCE 42
UPS_EXECUTE_ARG2 macro       107 inc/upserr.h     #define UPS_EXECUTE_ARG2 64
UPS_FATAL        macro       120 inc/upserr.h     #define UPS_FATAL "ERROR"
UPS_FILEMAP_CORRUPT macro        91 inc/upserr.h     #define UPS_FILEMAP_CORRUPT 48
UPS_FILENAME_TOO_LONG macro        54 inc/upserr.h     #define UPS_FILENAME_TOO_LONG 11
UPS_FILE_EXISTS  macro        73 inc/upserr.h     #define UPS_FILE_EXISTS 30
UPS_FILE_NOT_FOUND macro        86 inc/upserr.h     #define UPS_FILE_NOT_FOUND 43
UPS_INFORMATIONAL macro       122 inc/upserr.h     #define UPS_INFORMATIONAL "INFORMATIONAL"
UPS_INFORMATIONAL_LEN macro       123 inc/upserr.h     #define UPS_INFORMATIONAL_LEN 13
UPS_INVALID      macro        42 inc/upserr.h     #define UPS_INVALID -1
UPS_INVALID_ACTION macro        61 inc/upserr.h     #define UPS_INVALID_ACTION 18
UPS_INVALID_ACTION_ARG macro        62 inc/upserr.h     #define UPS_INVALID_ACTION_ARG 19
UPS_INVALID_ACTION_PARAMS macro        70 inc/upserr.h     #define UPS_INVALID_ACTION_PARAMS 27
UPS_INVALID_ANY_FLAVOR macro       108 inc/upserr.h     #define UPS_INVALID_ANY_FLAVOR 65
UPS_INVALID_ANY_QUALS macro       109 inc/upserr.h     #define UPS_INVALID_ANY_QUALS 66
UPS_INVALID_ARGUMENT macro        52 inc/upserr.h     #define UPS_INVALID_ARGUMENT 9
UPS_INVALID_KEYWORD macro        46 inc/upserr.h     #define UPS_INVALID_KEYWORD 3
UPS_INVALID_SEPARATOR macro        99 inc/upserr.h     #define UPS_INVALID_SEPARATOR 56
UPS_INVALID_SHELL macro        64 inc/upserr.h     #define UPS_INVALID_SHELL 21
UPS_INVALID_SPECIFICATION macro        83 inc/upserr.h     #define UPS_INVALID_SPECIFICATION 40 
UPS_LINE_TOO_LONG macro        58 inc/upserr.h     #define UPS_LINE_TOO_LONG 15
UPS_MISMATCHED_ENDIF macro       117 inc/upserr.h     #define UPS_MISMATCHED_ENDIF 74
UPS_MISMATCH_CHAIN macro        94 inc/upserr.h     #define UPS_MISMATCH_CHAIN 51
UPS_MISMATCH_PROD_NAME macro       102 inc/upserr.h     #define UPS_MISMATCH_PROD_NAME 59
UPS_MISMATCH_VERSION macro        95 inc/upserr.h     #define UPS_MISMATCH_VERSION 52
UPS_MISSING_MATCH macro        87 inc/upserr.h     #define UPS_MISSING_MATCH 44
UPS_NAME_TOO_LONG macro        49 inc/upserr.h     #define UPS_NAME_TOO_LONG 6
UPS_NEED_UNIQUE  macro        65 inc/upserr.h     #define UPS_NEED_UNIQUE 22
UPS_NERR         macro       118 inc/upserr.h     #define UPS_NERR 75 /* this one must always be last */
UPS_NOSHELL      macro        71 inc/upserr.h     #define UPS_NOSHELL 28
UPS_NOT_AUTH     macro        67 inc/upserr.h     #define UPS_NOT_AUTH 24
UPS_NOT_A_DIR    macro        98 inc/upserr.h     #define UPS_NOT_A_DIR 55
UPS_NOVALUE_ARGUMENT macro        60 inc/upserr.h     #define UPS_NOVALUE_ARGUMENT 17
UPS_NO_ACTION    macro        81 inc/upserr.h     #define UPS_NO_ACTION 38
UPS_NO_DATABASE  macro        47 inc/upserr.h     #define UPS_NO_DATABASE 4
UPS_NO_DESTINATION macro        68 inc/upserr.h     #define UPS_NO_DESTINATION 25
UPS_NO_FILE      macro        56 inc/upserr.h     #define UPS_NO_FILE 13
UPS_NO_INSTANCE  macro        88 inc/upserr.h     #define UPS_NO_INSTANCE 45
UPS_NO_KEYWORD   macro       105 inc/upserr.h     #define UPS_NO_KEYWORD 62
UPS_NO_MATCH     macro        89 inc/upserr.h     #define UPS_NO_MATCH 46
UPS_NO_MEMORY    macro        57 inc/upserr.h     #define UPS_NO_MEMORY 14
UPS_NO_NEW_INSTANCE macro        82 inc/upserr.h     #define UPS_NO_NEW_INSTANCE 39
UPS_NO_PRODUCT   macro        78 inc/upserr.h     #define UPS_NO_PRODUCT 35
UPS_NO_PRODUCT_FOUND macro        84 inc/upserr.h     #define UPS_NO_PRODUCT_FOUND 41 
UPS_NO_PROD_DIR  macro        93 inc/upserr.h     #define UPS_NO_PROD_DIR 50
UPS_NO_QUALIFIER macro        92 inc/upserr.h     #define UPS_NO_QUALIFIER 49
UPS_NO_SETUP_ENV macro        77 inc/upserr.h     #define UPS_NO_SETUP_ENV 34
UPS_NO_STAT_DIR  macro        50 inc/upserr.h     #define UPS_NO_STAT_DIR 7
UPS_NO_TABLE_FILE macro        74 inc/upserr.h     #define UPS_NO_TABLE_FILE 31
UPS_NO_TABLE_MATCH macro        55 inc/upserr.h     #define UPS_NO_TABLE_MATCH 12
UPS_NO_TRANSLATION macro       103 inc/upserr.h     #define UPS_NO_TRANSLATION 60
UPS_NO_VERSION   macro       114 inc/upserr.h     #define UPS_NO_VERSION 71
UPS_NO_VERSION_MATCH macro        53 inc/upserr.h     #define UPS_NO_VERSION_MATCH 10
UPS_OPEN_FILE    macro        44 inc/upserr.h     #define UPS_OPEN_FILE 1
UPS_PRODUCT_INFO macro       113 inc/upserr.h     #define UPS_PRODUCT_INFO 70
UPS_READ_FILE    macro        45 inc/upserr.h     #define UPS_READ_FILE 2
UPS_REMOVE_FILE  macro       116 inc/upserr.h     #define UPS_REMOVE_FILE 73
UPS_STATISTICS   macro       112 inc/upserr.h     #define UPS_STATISTICS 69
UPS_SUCCESS      macro        43 inc/upserr.h     #define UPS_SUCCESS 0
UPS_SYSTEM_ERROR macro        66 inc/upserr.h     #define UPS_SYSTEM_ERROR 23
UPS_TABLEFILE_AND_VERSION macro        76 inc/upserr.h     #define UPS_TABLEFILE_AND_VERSION 33
UPS_TEMP_FILE    macro       104 inc/upserr.h     #define UPS_TEMP_FILE 61
UPS_TIME         macro        48 inc/upserr.h     #define UPS_TIME 5
UPS_TOO_MANY_ACTION_ARG macro        63 inc/upserr.h     #define UPS_TOO_MANY_ACTION_ARG 20
UPS_UNEXPECTED_KEYWORD macro        90 inc/upserr.h     #define UPS_UNEXPECTED_KEYWORD 47
UPS_UNKNOWN_FILETYPE macro        59 inc/upserr.h     #define UPS_UNKNOWN_FILETYPE 16
UPS_UNKNOWN_TEXT macro       125 inc/upserr.h     #define UPS_UNKNOWN_TEXT "(unknown)"
UPS_UNSETUP_CLASH macro        80 inc/upserr.h     #define UPS_UNSETUP_CLASH 37
UPS_UNSETUP_FAILED macro        72 inc/upserr.h     #define UPS_UNSETUP_FAILED 29
UPS_VERIFY_COMPILE_DIR macro       101 inc/upserr.h     #define UPS_VERIFY_COMPILE_DIR 58
UPS_VERIFY_ENV_VAR macro        97 inc/upserr.h     #define UPS_VERIFY_ENV_VAR 54
UPS_VERIFY_PRODUCT macro        96 inc/upserr.h     #define UPS_VERIFY_PRODUCT 53
UPS_VERIFY_TABLE_DIR macro       100 inc/upserr.h     #define UPS_VERIFY_TABLE_DIR 57
UPS_VERSION_EXISTS macro        75 inc/upserr.h     #define UPS_VERSION_EXISTS 32
UPS_WARNING      macro       121 inc/upserr.h     #define UPS_WARNING "WARNING"
UPS_WRITE_FILE   macro        51 inc/upserr.h     #define UPS_WRITE_FILE 8
_UPSERR_H_       macro        25 inc/upserr.h     #define _UPSERR_H_
upserr_place     macro       158 inc/upserr.h     #define upserr_place() g_ups_line=__LINE__; g_ups_file=(char *)__FILE__;
upserr_vplace    macro       159 inc/upserr.h     #define upserr_vplace() if (UPS_VERBOSE) { upserr_place() }
_UPS_H_          macro        24 inc/ups.h        #define _UPS_H_
TOO_MUCH_FOR_UNSETUP macro        41 inc/upsact.h     #define TOO_MUCH_FOR_UNSETUP( ugo_cmd ) \
UPSACT_CMD_NEEDS_DB macro       191 inc/upsact.h     #define UPSACT_CMD_NEEDS_DB( flag ) (flag&0x00000010 ? 1 : 0)
UPSACT_FUNC_ISIN_TABLE macro       190 inc/upsact.h     #define UPSACT_FUNC_ISIN_TABLE( flag ) (flag&0x00000001 ? 1 : 0)
UPS_MAX_ARGC     macro        39 inc/upsact.h     #define UPS_MAX_ARGC 100
_UPSACT_H_       macro        23 inc/upsact.h     #define _UPSACT_H_
act              member      158 inc/upsact.h     t_upstyp_action *act;
argc             member      147 inc/upsact.h     int argc;
argv             member      148 inc/upsact.h     char *argv[UPS_MAX_ARGC];
cmd              member      159 inc/upsact.h     t_upsact_cmd *cmd;
cmd              member      166 inc/upsact.h     char *cmd;
cmd              member      181 inc/upsact.h     char *cmd;
cmd_index        member      165 inc/upsact.h     int cmd_index;
dep_ugo          member      160 inc/upsact.h     t_upsugo_command *dep_ugo;
e_addalias       enumerator  111 inc/upsact.h     e_addalias,
e_chain          enumerator   55 inc/upsact.h     e_chain,
e_configure      enumerator   66 inc/upsact.h     e_configure,
e_copy           enumerator   67 inc/upsact.h     e_copy,
e_copycatman     enumerator  124 inc/upsact.h     e_copycatman,
e_copyhtml       enumerator  120 inc/upsact.h     e_copyhtml,
e_copyinfo       enumerator  121 inc/upsact.h     e_copyinfo,
e_copyman        enumerator  122 inc/upsact.h     e_copyman,
e_copynews       enumerator  126 inc/upsact.h     e_copynews,
e_create         enumerator   78 inc/upsact.h     e_create, /* This has gone away */
e_current        enumerator   50 inc/upsact.h     e_current, /* NOT UPS commands */
e_declare        enumerator   68 inc/upsact.h     e_declare,
e_depend         enumerator   69 inc/upsact.h     e_depend,
e_development    enumerator   51 inc/upsact.h     e_development,
e_dodefaults     enumerator  128 inc/upsact.h     e_dodefaults,
e_else           enumerator  135 inc/upsact.h     e_else,
e_endif          enumerator  134 inc/upsact.h     e_endif,
e_endunless      enumerator  137 inc/upsact.h     e_endunless
e_envappend      enumerator  101 inc/upsact.h     e_envappend,
e_envprepend     enumerator  103 inc/upsact.h     e_envprepend,
e_envremove      enumerator  102 inc/upsact.h     e_envremove,
e_envset         enumerator  104 inc/upsact.h     e_envset,
e_envsetifnotset enumerator  105 inc/upsact.h     e_envsetifnotset,
e_envunset       enumerator  106 inc/upsact.h     e_envunset,
e_exeaccess      enumerator  117 inc/upsact.h     e_exeaccess,
e_exeactionoptional enumerator   95 inc/upsact.h     e_exeactionoptional,
e_exeactionrequired enumerator   96 inc/upsact.h     e_exeactionrequired, /* the order of the (un)setup and exeaction enums are importend */
e_execute        enumerator  118 inc/upsact.h     e_execute,
e_exist          enumerator   70 inc/upsact.h     e_exist,
e_filetest       enumerator  119 inc/upsact.h     e_filetest,
e_flavor         enumerator   80 inc/upsact.h     e_flavor,
e_get            enumerator   79 inc/upsact.h     e_get,
e_help           enumerator   81 inc/upsact.h     e_help,
e_if             enumerator  133 inc/upsact.h     e_if,
e_invalid_action enumerator   49 inc/upsact.h     e_invalid_action = -1, /* From here to e_setup is the actions there is */
e_invalid_cmd    enumerator   90 inc/upsact.h     e_invalid_cmd = -1,
e_list           enumerator   64 inc/upsact.h     e_list,
e_modify         enumerator   71 inc/upsact.h     e_modify,
e_new            enumerator   52 inc/upsact.h     e_new,
e_old            enumerator   53 inc/upsact.h     e_old,
e_parent         enumerator   65 inc/upsact.h     e_parent,
e_pathappend     enumerator  107 inc/upsact.h     e_pathappend,
e_pathprepend    enumerator  109 inc/upsact.h     e_pathprepend,
e_pathremove     enumerator  108 inc/upsact.h     e_pathremove,
e_pathset        enumerator  110 inc/upsact.h     e_pathset,
e_proddir        enumerator  130 inc/upsact.h     e_proddir,
e_rev_exeactionoptional enumerator   97 inc/upsact.h     e_rev_exeactionoptional, /* these two are internal ghost commands */
e_rev_exeactionrequired enumerator   98 inc/upsact.h     e_rev_exeactionrequired, /* created when reversing a list of commands */
e_setup          enumerator   62 inc/upsact.h     e_setup, /* This one starts the UPS commands */
e_setupenv       enumerator  129 inc/upsact.h     e_setupenv,
e_setupoptional  enumerator   91 inc/upsact.h     e_setupoptional = 0,
e_setuprequired  enumerator   92 inc/upsact.h     e_setuprequired,
e_sourcecompileopt enumerator  100 inc/upsact.h     e_sourcecompileopt,
e_sourcecompilereq enumerator   99 inc/upsact.h     e_sourcecompilereq,
e_sourceoptcheck enumerator  116 inc/upsact.h     e_sourceoptcheck,
e_sourceoptional enumerator  114 inc/upsact.h     e_sourceoptional,
e_sourcereqcheck enumerator  115 inc/upsact.h     e_sourcereqcheck,
e_sourcerequired enumerator  113 inc/upsact.h     e_sourcerequired,
e_start          enumerator   72 inc/upsact.h     e_start,
e_stop           enumerator   73 inc/upsact.h     e_stop,
e_tailor         enumerator   74 inc/upsact.h     e_tailor,
e_test           enumerator   54 inc/upsact.h     e_test,
e_touch          enumerator   75 inc/upsact.h     e_touch,
e_unalias        enumerator  112 inc/upsact.h     e_unalias,
e_unchain        enumerator   61 inc/upsact.h     e_unchain,
e_unconfigure    enumerator   76 inc/upsact.h     e_unconfigure,
e_uncopycatman   enumerator  125 inc/upsact.h     e_uncopycatman,
e_uncopyman      enumerator  123 inc/upsact.h     e_uncopyman,
e_uncurrent      enumerator   56 inc/upsact.h     e_uncurrent,
e_undeclare      enumerator   77 inc/upsact.h     e_undeclare,
e_undevelopment  enumerator   57 inc/upsact.h     e_undevelopment,
e_unk            enumerator   83 inc/upsact.h     e_unk /* This one must always be at the end */
e_unless         enumerator  136 inc/upsact.h     e_unless,
e_unnew          enumerator   58 inc/upsact.h     e_unnew,
e_unold          enumerator   59 inc/upsact.h     e_unold,
e_unproddir      enumerator  132 inc/upsact.h     e_unproddir,
e_unsetup        enumerator   63 inc/upsact.h     e_unsetup,
e_unsetupenv     enumerator  131 inc/upsact.h     e_unsetupenv,
e_unsetupoptional enumerator   93 inc/upsact.h     e_unsetupoptional,
e_unsetuprequired enumerator   94 inc/upsact.h     e_unsetuprequired,
e_untest         enumerator   60 inc/upsact.h     e_untest,
e_verify         enumerator   82 inc/upsact.h     e_verify,
e_writecompilescript enumerator  127 inc/upsact.h     e_writecompilescript,
flags            member      168 inc/upsact.h     unsigned int flags;
flags            member      187 inc/upsact.h     unsigned int flags;
func             member      183 inc/upsact.h     tpf_cmd func;
iact             member      145 inc/upsact.h     int iact;
icmd             member      146 inc/upsact.h     int icmd;
icmd             member      182 inc/upsact.h     int icmd;
icmd_undo        member      186 inc/upsact.h     int icmd_undo;
level            member      153 inc/upsact.h     int level;
mat              member      157 inc/upsact.h     t_upstyp_matched_product *mat;
max_params       member      185 inc/upsact.h     int max_params;
min_params       member      184 inc/upsact.h     int min_params;
mode             member      154 inc/upsact.h     int mode;
pbuf             member      149 inc/upsact.h     char *pbuf;
s_cmd_info       struct      164 inc/upsact.h     typedef struct s_cmd_info {
s_cmd_map        struct      180 inc/upsact.h     typedef struct s_cmd_map {
t_cmd_info       typedef     170 inc/upsact.h     } t_cmd_info;
t_cmd_map        typedef     188 inc/upsact.h     } t_cmd_map;
t_upsact_cmd     typedef     150 inc/upsact.h     } t_upsact_cmd;
t_upsact_item    typedef     161 inc/upsact.h     } t_upsact_item;
tpf_cmd          typedef     173 inc/upsact.h     typedef void (*tpf_cmd)( const t_upstyp_matched_instance * const a_inst,
ugo              member      156 inc/upsact.h     t_upsugo_command *ugo;
uncmd_index      member      169 inc/upsact.h     int uncmd_index;
unsetup          member      155 inc/upsact.h     int unsetup;
upsact_cmd       struct      144 inc/upsact.h     typedef struct upsact_cmd {
upsact_item      struct      152 inc/upsact.h     typedef struct upsact_item {
valid_opts       member      167 inc/upsact.h     char *valid_opts;
_UPS_DEPEND_H_   macro        23 inc/ups_depend.h #define _UPS_DEPEND_H_
UPSSHELL         macro        23 inc/upsget.h     #define UPSSHELL "UPS_SHELL"
_UPSGET_H_       macro        21 inc/upsget.h     #define _UPSGET_H_
_UPS_UNSETUP_H_  macro        23 inc/ups_unsetup.h #define _UPS_UNSETUP_H_
DIVIDER          macro        44 inc/upsutl.h     #define DIVIDER "#####################################################################"
MUST_EXIST       macro        50 inc/upsutl.h     #define MUST_EXIST 1
NOT_EXIST        macro        51 inc/upsutl.h     #define NOT_EXIST 0
STR_TRIM         macro        46 inc/upsutl.h     #define STR_TRIM 't'
STR_TRIM_DEFAULT macro        48 inc/upsutl.h     #define STR_TRIM_DEFAULT ' '
STR_TRIM_PACK    macro        47 inc/upsutl.h     #define STR_TRIM_PACK 'p'
UPS_SEPARATOR    macro        49 inc/upsutl.h     #define UPS_SEPARATOR ":"
_UPSUTL_H_       macro        31 inc/upsutl.h     #define _UPSUTL_H_
_UPS_UNK_H_      macro        23 inc/ups_unk.h    #define _UPS_UNK_H_
_UPS_COPY_H_     macro        23 inc/ups_copy.h   #define _UPS_COPY_H_
_UPSMAT_H_       macro        23 inc/upsmat.h     #define _UPSMAT_H_
_UPS_DECLARE_H_  macro        22 inc/ups_declare.h #define _UPS_DECLARE_H_
CHAIN_SUFFIX     macro        57 inc/upsfil.h     #define CHAIN_SUFFIX ".chain"
CONFIG_FILE      macro        60 inc/upsfil.h     #define CONFIG_FILE "dbconfig"
CONFIG_FILE_LEN  macro        61 inc/upsfil.h     #define CONFIG_FILE_LEN 8
CONFIG_SIZE      macro        62 inc/upsfil.h     #define CONFIG_SIZE UPS_FILES_LEN + CONFIG_FILE_LEN + 1
UPS_FILES        macro        58 inc/upsfil.h     #define UPS_FILES ".upsfiles"
UPS_FILES_LEN    macro        59 inc/upsfil.h     #define UPS_FILES_LEN 9
VERSION_SUFFIX   macro        56 inc/upsfil.h     #define VERSION_SUFFIX ".version"
_UPSFIL_H_       macro        22 inc/upsfil.h     #define _UPSFIL_H_
e_file_chain     enumerator   68 inc/upsfil.h     e_file_chain,
e_file_count     enumerator   71 inc/upsfil.h     e_file_count
e_file_dbconfig  enumerator   69 inc/upsfil.h     e_file_dbconfig,
e_file_table     enumerator   67 inc/upsfil.h     e_file_table,
e_file_unknown   enumerator   70 inc/upsfil.h     e_file_unknown,
e_file_version   enumerator   66 inc/upsfil.h     e_file_version = 0,
e_ups_file       enum         65 inc/upsfil.h     enum e_ups_file {
_UPS_UNCONFIGURE_H_ macro        23 inc/ups_unconfigure.h #define _UPS_UNCONFIGURE_H_
_UPS_MODIFY_H_   macro        21 inc/ups_modify.h #define _UPS_MODIFY_H_
_UPS_UNDECLARE_H_ macro        22 inc/ups_undeclare.h #define _UPS_UNDECLARE_H_
ANY_FLAVOR       macro       171 inc/upstyp.h     #define ANY_FLAVOR "ANY"
ANY_MATCH        macro       168 inc/upstyp.h     #define ANY_MATCH "*"
INVALID_INDEX    macro       173 inc/upstyp.h     #define INVALID_INDEX -1
JOURNAL          macro       175 inc/upstyp.h     #define JOURNAL 1
MAX_LINE_LEN     macro       172 inc/upstyp.h     #define MAX_LINE_LEN 1024
NOJOURNAL        macro       176 inc/upstyp.h     #define NOJOURNAL 0
NOT_EQUAL_ANY_MATCH macro       169 inc/upstyp.h     #define NOT_EQUAL_ANY_MATCH(string) (*(string) - '*')
UPSRELATIVE      macro       178 inc/upstyp.h     #define UPSRELATIVE(dir) ((dir && (dir[0] && (dir[0] != '/') && (dir[0] != '.'))))
_UPSTYP_H_       macro        34 inc/upstyp.h     #define _UPSTYP_H_
action           member      140 inc/upstyp.h     char *action;
action_list      member      116 inc/upstyp.h     t_upslst_item *action_list;
archive_file     member      102 inc/upstyp.h     char *archive_file;
authorized_nodes member       53 inc/upstyp.h     char *authorized_nodes;
authorized_nodes member      103 inc/upstyp.h     char *authorized_nodes;
catman_source_dir member      108 inc/upstyp.h     char *catman_source_dir;
catman_target_dir member       56 inc/upstyp.h     char *catman_target_dir;
chain            member       92 inc/upstyp.h     char *chain;
chain            member      128 inc/upstyp.h     t_upstyp_instance *chain;
chain            member      150 inc/upstyp.h     char *chain;
command_list     member      141 inc/upstyp.h     t_upslst_item *command_list;
comment_list     member      156 inc/upstyp.h     t_upslst_item *comment_list;
compile_dir      member      106 inc/upstyp.h     char *compile_dir;
compile_file     member      107 inc/upstyp.h     char *compile_file;
config           member       71 inc/upstyp.h     t_upstyp_config *config;
config           member      157 inc/upstyp.h     t_upstyp_config *config;
db_dir           member      114 inc/upstyp.h     char *db_dir; 
db_info          member       78 inc/upstyp.h     t_upstyp_db *db_info;
declared         member       94 inc/upstyp.h     char *declared;
declarer         member       93 inc/upstyp.h     char *declarer;
description      member      104 inc/upstyp.h     char *description; 
description      member      152 inc/upstyp.h     char *description; 
file             member      147 inc/upstyp.h     char *file;
flag             member      121 inc/upstyp.h     int flag; /* used by verify in upsmat */
flavor           member       89 inc/upstyp.h     char *flavor;
html_source_dir  member      109 inc/upstyp.h     char *html_source_dir;
html_target_dir  member       58 inc/upstyp.h     char *html_target_dir;
info_source_dir  member      110 inc/upstyp.h     char *info_source_dir;
info_target_dir  member       57 inc/upstyp.h     char *info_target_dir;
instance_list    member      155 inc/upstyp.h     t_upslst_item *instance_list;
invalid_instance member      134 inc/upstyp.h     int invalid_instance;
journal          member      159 inc/upstyp.h     int journal;
man_source_dir   member      111 inc/upstyp.h     char *man_source_dir;
man_target_dir   member       55 inc/upstyp.h     char *man_target_dir;
minst_list       member       81 inc/upstyp.h     t_upslst_item *minst_list;
modified         member       96 inc/upstyp.h     char *modified;
modifier         member       95 inc/upstyp.h     char *modifier;
name             member       70 inc/upstyp.h     char *name;
news_source_dir  member      112 inc/upstyp.h     char *news_source_dir;
news_target_dir  member       59 inc/upstyp.h     char *news_target_dir;
origin           member       97 inc/upstyp.h     char *origin;
prod_dir         member       98 inc/upstyp.h     char *prod_dir;
prod_dir_prefix  member       52 inc/upstyp.h     char *prod_dir_prefix;
product          member       79 inc/upstyp.h     char *product;
product          member       87 inc/upstyp.h     char *product;
product          member      148 inc/upstyp.h     char *product;
qualifiers       member       90 inc/upstyp.h     char *qualifiers;
sav_inst         member      120 inc/upstyp.h     struct upstyp_instance *sav_inst;
setups_dir       member       61 inc/upstyp.h     char *setups_dir;
statistics       member       54 inc/upstyp.h     char *statistics;
statistics       member      105 inc/upstyp.h     char *statistics;
t_upstyp_action  typedef     142 inc/upstyp.h     } t_upstyp_action;
t_upstyp_config  typedef      63 inc/upstyp.h     } t_upstyp_config;
t_upstyp_db      typedef      72 inc/upstyp.h     } t_upstyp_db;
t_upstyp_instance typedef     123 inc/upstyp.h     } t_upstyp_instance;
t_upstyp_matched_instance typedef     135 inc/upstyp.h     } t_upstyp_matched_instance;
t_upstyp_matched_product typedef      82 inc/upstyp.h     } t_upstyp_matched_product;
t_upstyp_product typedef     160 inc/upstyp.h     } t_upstyp_product;
table            member      130 inc/upstyp.h     t_upstyp_instance *table;
table_dir        member      100 inc/upstyp.h     char *table_dir;
table_file       member      101 inc/upstyp.h     char *table_file;
upd_usercode_dir member       60 inc/upstyp.h     char *upd_usercode_dir;
ups_db_version   member       51 inc/upstyp.h     char *ups_db_version;
ups_db_version   member      151 inc/upstyp.h     char *ups_db_version;
ups_dir          member       99 inc/upstyp.h     char *ups_dir;
upstyp_action    struct      138 inc/upstyp.h     typedef struct upstyp_action
upstyp_config    struct       50 inc/upstyp.h     typedef struct upstyp_config {
upstyp_db        struct       68 inc/upstyp.h     typedef struct upstyp_db
upstyp_instance  struct       85 inc/upstyp.h     typedef struct upstyp_instance
upstyp_matched_instance struct      126 inc/upstyp.h     typedef struct upstyp_matched_instance
upstyp_matched_product struct       76 inc/upstyp.h     typedef struct upstyp_matched_product
upstyp_product   struct      145 inc/upstyp.h     typedef struct upstyp_product
user_list        member      118 inc/upstyp.h     t_upslst_item *user_list;
user_list        member      153 inc/upstyp.h     t_upslst_item *user_list;
version          member       88 inc/upstyp.h     char *version;
version          member      129 inc/upstyp.h     t_upstyp_instance *version;
version          member      149 inc/upstyp.h     char *version;
version_subdir   member       62 inc/upstyp.h     char *version_subdir;
xtra_chains      member      132 inc/upstyp.h     t_upslst_item *xtra_chains;
_UPS_TOUCH_H_    macro        22 inc/ups_touch.h  #define _UPS_TOUCH_H_
