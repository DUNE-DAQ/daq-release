cmake_minimum_required(VERSION 3.4.3)

set(PACKAGE ftools)
set(PACKAGE_VERSION 0.0.0)

include(FELIX)

set(VERSION "0.0.0")

#felix_add_external(json ${json_version})
#felix_add_external(yaml-cpp ${yaml-cpp_version} ${BINARY_TAG})
find_package(nlohmann_json)
find_package(yaml-cpp)

# Stuff for this project
include_directories(src)
include_directories(lpgbt-regmap)

set(CMAKE_CXX_STANDARD 17)

# With or without using libcmem_rcc
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fPIC -DUSE_LIB_CMEM")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fPIC")

set(CMAKE_BUILD_TYPE Debug)

# FlxTools library
file(GLOB FLXTOOLS_SOURCES src/*.cpp)
tdaq_add_library(FlxTools NOINSTALL ${FLXTOOLS_SOURCES})
target_link_libraries(FlxTools FlxCard drivers_rcc nlohmann_json::nlohmann_json yaml-cpp)

# fcap: Tool to list some FLX-device capabilities
tdaq_add_executable(fcap tools/fcap.cpp)
target_link_libraries(fcap FlxCard FlxTools)

# fdaq: Tool for FLX-card data-acquisition using FlxTools
tdaq_add_executable(fdaq tools/fdaq.cpp)
target_link_libraries(fdaq FlxCard FlxTools)

# fdaqm: Tool for FLX-card 'multi'-DMA data-acquisition using FlxTools
tdaq_add_executable(fdaqm tools/fdaqm.cpp)
target_link_libraries(fdaqm FlxCard FlxTools)

# fcheck: Tool to check a file with FlxTools (emulator) generated data
# or display selected data from that file
tdaq_add_executable(fcheck tools/fcheck.cpp)
target_link_libraries(fcheck FlxCard FlxTools)

# fupload: Tool to upload data (test or from file) to an FLX-card e-link
tdaq_add_executable(fupload tools/fupload.cpp)
target_link_libraries(fupload FlxCard FlxTools)

# fplayback: Tool to upload FLX-card data blocks from file
# (as written by fdaq) to an FLX-card
tdaq_add_executable(fplayback tools/fplayback.cpp)
target_link_libraries(fplayback FlxCard FlxTools)

# fedump: Tool to dump selected E-link data blocks from an FLX-card to screen.
tdaq_add_executable(fedump tools/fedump.cpp)
target_link_libraries(fedump FlxCard FlxTools)

# felink: Tool to convert e-link numbers into egroup/epath/bitposition/width and vice-versa
# or generate a list of valid e-links for a certain GBT or egroup
tdaq_add_executable(felink tools/felink.cpp)
target_link_libraries(felink FlxCard)

# fice: Tool to configure GBTX or lpGBT via FLX-card (lp)GBT link IC channel
# (through a virtual E-link; to replace fic)
tdaq_add_executable(fice tools/fice.cpp)
target_link_libraries(fice FlxCard FlxTools)

# flpgbtconf: Tool to configure lpGBT registers via IC channel on an FLX-card,
# one register or bit field at a time, based on name as in lpGBT manual
tdaq_add_executable(flpgbtconf tools/flpgbtconf.cpp tools/ic.cpp)
target_link_libraries(flpgbtconf FlxCard FlxTools)

# fedma: Tool to configure which DMA controller to use for (ToHost) e-links
tdaq_add_executable(fedma tools/fedma.cpp)
target_link_libraries(fedma FlxCard FlxTools)

# fstrips: felix strips configuration tool
tdaq_add_executable(fstrips tools/fstrips.cpp)
target_link_libraries(fstrips FlxCard FlxTools)

# feconf: Tool to write a GBT e-link configuration from file
# (generated by elinkconfig) to an FLX-card and
# update the emulator RAM contents to match the configuration
tdaq_add_executable(feconf tools/feconf.cpp)
target_link_libraries(feconf FlxCard FlxTools)

# fuptest: Tool to test series of e-links with upload data,
# using loopback fibers or internal loopback (when enabled)
tdaq_add_executable(fuptest tools/fuptest.cpp)
target_link_libraries(fuptest FlxCard FlxTools)

# feswap: Tool to reverse bit order for (2-bit) e-links in an e-group
# (to be replaced by fereverse, below)
#tdaq_add_executable(feswap tools/feswap.cpp)
#target_link_libraries(feswap FlxCard FlxTools)

# fereverse: Tool to enable/disable bit order reversal for e-links
tdaq_add_executable(fereverse tools/fereverse.cpp)
target_link_libraries(fereverse FlxCard FlxTools)

# feto: Tool to enable or disable 'instant timeout' for e-links in an e-group
tdaq_add_executable(feto tools/feto.cpp)
target_link_libraries(feto FlxCard FlxTools)

# femu: Tool to configure fanout-select registers and start/stop emulator
tdaq_add_executable(femu tools/femu.cpp)
target_link_libraries(femu FlxCard)

# fttcemu: Tool to configure TTC-emulator registers and start/stop emulator
tdaq_add_executable(fttcemu tools/fttcemu.cpp)
target_link_libraries(fttcemu FlxCard)

# femuran: Tool to configure FELIG or FMEMU emulator 'random ram' memory
tdaq_add_executable(femuran tools/femuran.cpp)
target_link_libraries(femuran FlxCard)

# ffmemu: Tool to configure and start the FULLMODE emulator
tdaq_add_executable(ffmemu tools/ffmemu.cpp)
target_link_libraries(ffmemu FlxCard)

# fexoff: Tool to enable or disable the XOFF feature (FULLmode)
# in a selected or all to-frontend links
tdaq_add_executable(fexoff tools/fexoff.cpp)
target_link_libraries(fexoff FlxCard)

# fexofftx: Tool to generate an XOFF or XON (FULLmode)
# in a selected to-frontend link
tdaq_add_executable(fexofftx tools/fexofftx.cpp)
target_link_libraries(fexofftx FlxCard FlxTools)

# fttcbusy: Tool to display E-link TTC BUSYs and other BUSY-related settings
# and optionally clear the BUSY bits or configure the BUSY settings
tdaq_add_executable(fttcbusy tools/fttcbusy.cpp)
target_link_libraries(fttcbusy FlxCard)

# fgpolarity: Tool to configure GBT transceiver TX and RX polarity
tdaq_add_executable(fgpolarity tools/fgpolarity.cpp)
target_link_libraries(fgpolarity FlxCard)

# fgbtxconf: GBTX configuration tool (via a GBT-SCA I2C channel)
tdaq_add_executable(fgbtxconf tools/fgbtxconf.cpp)
target_link_libraries(fgbtxconf FlxCard FlxTools)

# fpepo: FLX-card BAR0,1,2 register peek/poke tool
tdaq_add_executable(fpepo tools/fpepo.cpp)
target_link_libraries(fpepo FlxCard)

# fkchar
#tdaq_add_executable(fkchar tools/fkchar.cpp)
#target_link_libraries(fkchar FlxCard)

# fflashprog: Tool to program FLX-card firmware into its flash memory device via FLX-card registers.
tdaq_add_executable(fflashprog tools/fflashprog.cpp)
target_link_libraries(fflashprog FlxCard FlxTools)

# fflash: Tool to load firmware from a selected flash partition into an FLX-712 card
# (link statically to allow it to be called with 'sudo')
if (EXISTS ../../flxcard/src/FlxCard.cpp)
  message("--   **fflash using parallel modules...")
  tdaq_add_executable(fflash tools/fflash.cpp ../../flxcard/src/FlxCard.cpp ../../flxcard/src/FlxException.cpp ../../regmap/src/regmap-symbol.c)
  target_include_directories(fflash PRIVATE ../flxcard ../drivers_rcc ../regmap)
else (EXISTS ../../flxcard/src/FlxCard.cpp)
  message("--   **fflash using submodules...")
  tdaq_add_executable(fflash tools/fflash.cpp ../flxcard/src/FlxCard.cpp ../flxcard/src/FlxException.cpp ../regmap/src/regmap-symbol.c)
  target_include_directories(fflash PRIVATE flxcard drivers_rcc regmap ../flxcard ../drivers_rcc ../regmap)
endif()
target_compile_options( fflash PUBLIC -fabi-version=2 )
target_link_libraries(fflash -static-libgcc -static-libstdc++)

# fec: Tool to compose and upload GBT-SCA frames to operate a certain GBT-SCA
# channel to a particular e-link
# (which should be configured for HDLC and have 2-bit width)
tdaq_add_executable(fec tools/fec.cpp)
target_link_libraries(fec FlxCard FlxTools)

# fscaadc: FELIX<->GBT-SCA ADC read tool
tdaq_add_executable(fscaadc tools/fscaadc.cpp)
target_link_libraries(fscaadc FlxCard FlxTools)

# fscadac: FELIX<->GBT-SCA DAC write/read tool
tdaq_add_executable(fscadac tools/fscadac.cpp)
target_link_libraries(fscadac FlxCard FlxTools)

# fscaio: FELIX<->GBT-SCA GPIO read/write tool
tdaq_add_executable(fscaio tools/fscaio.cpp)
target_link_libraries(fscaio FlxCard FlxTools)

# fscai2c: FELIX<->GBT-SCA I2C read/write tool
tdaq_add_executable(fscai2c tools/fscai2c.cpp)
target_link_libraries(fscai2c FlxCard FlxTools)

# fscai2c-io: FELIX<->GBT-SCA I2C-via-GPIO read/write tool
tdaq_add_executable(fscai2c-io tools/fscai2c-io.cpp)
target_link_libraries(fscai2c-io FlxCard FlxTools)

# fscajtag: FELIX<->GBT-SCA JTAG FPGA programming tool
tdaq_add_executable(fscajtag tools/fscajtag.cpp)
target_link_libraries(fscajtag FlxCard FlxTools)

# fscajfile: FELIX<->GBT-SCA upload tool for JTAG strings from file
tdaq_add_executable(fscajfile tools/fscajfile.cpp)
target_link_libraries(fscajfile FlxCard FlxTools)

# fxvcserver: Vivado<->FELIX<->GBT-SCA JTAG interface: XVC protocol server
tdaq_add_executable(fxvcserver tools/fxvcserver.cpp)
target_link_libraries(fxvcserver FlxCard FlxTools)

# fscaid: FELIX<->GBT-SCA Chip ID read tool
tdaq_add_executable(fscaid tools/fscaid.cpp)
target_link_libraries(fscaid FlxCard FlxTools)

# fsca-gpio-i2c-test: FELIX<->GBT-SCA multi-message test using GPIO and I2C
tdaq_add_executable(fsca-gpio-i2c-test tools/fsca-gpio-i2c-test.cpp)
target_link_libraries(fsca-gpio-i2c-test FlxCard FlxTools)

# fscareply: Tool to parse a GBT-SCA reply frame
tdaq_add_executable(fscareply tools/fscareply.cpp)
target_link_libraries(fscareply FlxCard FlxTools)

# fscatest: FELIX<->GBT-SCA multi-command test
#tdaq_add_executable(fscatest tools/fscatest.cpp)
#target_link_libraries(fscatest FlxCard FlxTools)

# fscads24: 1-Wire 64-bit ID readout from a DS24xx chip connected to a GBT-SCA GPIO pin
tdaq_add_executable(fscads24 tools/fscads24.cpp)
target_link_libraries(fscads24 FlxCard FlxTools)

# ds24test: 1-Wire protocol test
#tdaq_add_executable(ds24test tools/ds24test.cpp)
#target_link_libraries(ds24test FlxCard FlxTools)

# flpgbtio: FELIX<->lpGBT GPIO read/write tool
tdaq_add_executable(flpgbtio tools/flpgbtio.cpp tools/ic.cpp)
target_link_libraries(flpgbtio FlxCard FlxTools)

# frecv: program template for processing user data chunks received from a FLX-card
tdaq_add_executable(frecv tools/frecv.cpp)
target_link_libraries(frecv FlxCard FlxTools)

# ffile: program template for processing user data chunks from fdaq files
tdaq_add_executable(ffile tools/ffile.cpp)
target_link_libraries(ffile FlxCard FlxTools)

install(TARGETS FlxTools EXPORT felix DESTINATION lib)
