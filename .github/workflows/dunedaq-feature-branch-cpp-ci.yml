name: Build feature branch together

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches: 
      - feature/*
    paths-ignore:
      - 'docs/**'
      - '.github/**'

  workflow_dispatch:
    inputs:
      checkout_dev:
        description: "Whether to checkout a package's develop branch if feature branch does not exist (Yes/No)?"
        default: "No"
        required: true


jobs:
  Build_against_dev_release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: dunedaq/sl7-minimal:dev
    defaults:
      run:
        shell: bash
    env:
      DBT_AREA_FILE: "dbt-settings"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    
    - name: Checkout daq-release
      uses: actions/checkout@v4
      with:
        repository: DUNE-DAQ/daq-release
        path: daq-release
        
    - name: setup dev area
      run: |
          source /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh
          setup_dbt latest
          dbt-create.sh -c -n last_successful dev
          
          #- name: checkout package for CI
      #uses: actions/checkout@v4
      #with:
              #path: ${{ github.repository }}

    - name: checkout releated repos
      run: |
          branch_name="${GITHUB_REF#refs/heads/}"
          cd $GITHUB_WORKSPACE/daq-release
          if git ls-remote --exit-code --heads origin $branch_name; then
              git checkout $branch_name
          fi
          mkdir -p $GITHUB_WORKSPACE/sourcecode
          export checkout_dev=${{ github.event.inputs.checkout_dev }} 
          if [[ ${checkout_dev} == "No" ]]; then
              $GITHUB_WORKSPACE/daq-release/scripts/checkout-package-release.sh -f $GITHUB_WORKSPACE/daq-release/configs/dunedaq-develop/release_manifest.sh -o $GITHUB_WORKSPACE/sourcecode -b $branch_name -a -n
          elif [[ ${checkout_dev} == "Yes" ]]; then
              $GITHUB_WORKSPACE/daq-release/scripts/checkout-package-release.sh -f $GITHUB_WORKSPACE/daq-release/configs/dunedaq-develop/release_manifest.sh -o $GITHUB_WORKSPACE/sourcecode -b $branch_name -a
          else
              echo "Only Yes or No is allowed for the input field."
              exit 1
          fi
    
    - name: setup build env, build and lint the repo against the development release
      run: |
          export REPO=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
          source /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh
          setup_dbt latest
          cd $GITHUB_WORKSPACE/dev
          dbt-workarea-env || true
          setup_repo_env="SETUP_$REPO"
          [[ -z ${!setup_env_repo+x} ]] || unsetup $REPO
          cp -pr $GITHUB_WORKSPACE/sourcecode/* $GITHUB_WORKSPACE/dev/sourcecode
          dbt-build.sh
          #dbt-build.sh --lint
          $GITHUB_WORKSPACE/daq-release/scripts/upsify-daq-pkgs.py -w $GITHUB_WORKSPACE/dev -o /tarballs
          
    - name: upload UPS tarball and log file
      uses: actions/upload-artifact@v3
      with:
        name: ups_package
        path: /tarballs

    - name: upload build log file
      uses: actions/upload-artifact@v3
      with:
        name: build_log
        path: ${{ github.workspace }}/dev/log/build*.log

    - name: upload linter output file
      uses: actions/upload-artifact@v3
      with:
        name: linting_log
        path: ${{ github.workspace }}/dev/log/linting*.log
