name: Test Single Pkg Workflow

on:
  workflow_dispatch:
    inputs:
      pkg-name:
        description: 'single packge CI'
        default: 'appfwk'

jobs:

  build_single_pkg:
    name: build single pkg
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: "ghcr.io/dune-daq/sl7-spack:latest"
            os_name: "c7"

    steps:
    - uses: cvmfs-contrib/github-action-cvmfs@v3

    - name: change dir permission
      run: |
        sudo chmod -R go+rwx /var/lib/cvmfs

    - name: Cache cvmfs cache
      id: cvmfs_cache
      uses: actions/cache@v3
      with:
        path: /var/lib/cvmfs/shared
        key: cachecvmfs

    - name: restore dir permission
      run: |
        sudo chown -R cvmfs.cvmfs /var/lib/cvmfs
        sudo chmod -R go-rwx /var/lib/cvmfs

    - name: Checkout pkg
      uses: actions/checkout@v4
      with:
        repository: DUNE-DAQ/${{ github.event.inputs.pkg-name }}
        path: scratch/sourcecode/${{ github.event.inputs.pkg-name }}

    - name: start docker container with bind mount cvmfs
      run: |

        cd $GITHUB_WORKSPACE/scratch
        cat << EOT > build_pkg.sh
        #!/bin/bash
        
        cd /scratch
        source /cvmfs/dunedaq.opensciencegrid.org/tools/dbt/latest/env.sh
        dbt-create -n last_fddaq dev-${{ matrix.os_name }}
        cd dev-${{ matrix.os_name }}
        source env.sh || true
        spack unload ${{ github.event.inputs.pkg-name }} || true
        mv /scratch/sourcecode/* sourcecode
        dbt-build
        dbt-workarea-env
        EOT
        chmod +x build_pkg.sh

        docker run --rm -v /cvmfs:/cvmfs:shared -v $GITHUB_WORKSPACE/scratch:/scratch ghcr.io/dune-daq/sl7-spack:latest /scratch/build_pkg.sh

    - name: upload build log file
      uses: actions/upload-artifact@v3
      with:
        name: spack_build_log_${{ matrix.os_name }}
        path: ${{ github.workspace }}/scratch/dev-${{ matrix.os_name }}/log/build*.log

    - name: upload linter output file
      uses: actions/upload-artifact@v3
      with:
        name: spack_linting_log_${{ matrix.os_name }}
        path: ${{ github.workspace }}/scratch/dev-${{ matrix.os_name }}/log/linting*

    - name: change dir permission again
      run: |
        sudo chmod -R go+rwx /var/lib/cvmfs

  build_single_pkg_on_ubuntu:
    name: build single pkg on ubuntu
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - uses: cvmfs-contrib/github-action-cvmfs@v3

    - name: change dir permission
      run: |
        sudo chmod -R go+rwx /var/lib/cvmfs

    - name: install build-essential
      run: |
        sudo apt update
        sudo apt-get install -y build-essential gcc-multilib g++-multilib
        cd $GITHUB_WORKSPACE
        cat << EOT > ubuntu-lib64.sh
        #!/bin/bash
        cd /usr/lib64
        for i in \$(ls /usr/lib/x86_64-linux-gnu/)
        do
            if [[ "\$i" != "ld-linux"* ]]; then
                ln -s /usr/lib/x86_64-linux-gnu/\$i .
            fi
        done
        EOT
        chmod +x ubuntu-lib64.sh

        sudo $GITHUB_WORKSPACE/ubuntu-lib64.sh

    - name: Cache cvmfs cache
      id: cvmfs_cache
      uses: actions/cache@v3
      with:
        path: /var/lib/cvmfs/shared
        key: cachecvmfs

    - name: restore dir permission
      run: |
        sudo chown -R cvmfs.cvmfs /var/lib/cvmfs
        sudo chmod -R go-rwx /var/lib/cvmfs
    - uses: cvmfs-contrib/github-action-cvmfs@v3

    - name: Checkout pkg
      uses: actions/checkout@v4
      with:
        repository: DUNE-DAQ/${{ github.event.inputs.pkg-name }}
        path: scratch/sourcecode/${{ github.event.inputs.pkg-name }}

    - name: build pkg
      run: |
        
        LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LIBRARY_PATH 
        export LIBRARY_PATH
        cd $GITHUB_WORKSPACE/scratch
        source /cvmfs/dunedaq.opensciencegrid.org/tools/dbt/latest/env.sh
        dbt-create -i -n last_fddaq dev-ubuntu
        cd dev-ubuntu
        source env.sh || true
        spack find --loaded -p
        spack load daq-cmake || true
        spack unload ${{ github.event.inputs.pkg-name }} || true
        mv $GITHUB_WORKSPACE/scratch/sourcecode/* sourcecode
        dbt-workarea-env
        ls -a $PWD
        deactivate || true
        source .venv/bin/activate
        dbt-build
        dbt-workarea-env
