name: Alma9 Spack Nightly Workflow

on:
  workflow_dispatch:
    inputs:
      tag-prefix:
        description: 'nightly tag prefix'
        default: ''
      feature-branch:
        description: 'feature branch to be used across all DAQ repos wherever possible.'
        default: develop
      cvmfs-deployment:
        description: 'whether to deploy the release to cvmfs'
        default: 'no'

jobs:
  make_nightly_tag:
    name: create nightly tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create_nightly_tag.outputs.nightly_tag }} 
    defaults:
      run:
        shell: bash
    steps:
      - id: create_nightly_tag
        run: |
          date_tag=$(date +%y-%m-%d)
          echo "nightly_tag=${{ github.event.inputs.tag-prefix }}${date_tag}"  >>  "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

  build_the_develop_release_spack:
    name: build_dev_release_spack
    runs-on: isc01
      #runs-on: ubuntu-latest
    needs: make_nightly_tag
    container:
      image: ghcr.io/dune-daq/alma9-slim-externals:v2.0T
    defaults:
      run:
        shell: bash

    steps:
    - name: Start the CI
      run: echo "Start the CI anyway ${{ github.event.inputs.name }}"

    - name: Checkout daq-release
      uses: actions/checkout@v4
      with:
        repository: DUNE-DAQ/daq-release
        path: daq-release

    - name: setup directories and install spack for the dunedaq release
      env:
        NIGHTLY_TAG: ${{needs.make_nightly_tag.outputs.tag}}
      run: |
          export SPACK_VERSION=0.20.0
          export GCC_VERSION=12.1.0
          export EXT_VERSION=v2.0
          export SPACK_EXTERNALS=/cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-${EXT_VERSION}/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          export DAQ_RELEASE="NAB${NIGHTLY_TAG}"
          export SPACK_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/nightly/$DAQ_RELEASE
          export SPACK_RELEASE=$SPACK_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          mkdir -p ${SPACK_RELEASE}


          cd ${SPACK_RELEASE}
          wget https://github.com/spack/spack/archive/refs/tags/v${SPACK_VERSION}.tar.gz
          tar xf v${SPACK_VERSION}.tar.gz
          ln -s spack-${SPACK_VERSION} spack-installation
          rm -f v${SPACK_VERSION}.tar.gz


          export DAQ_RELEASE_DIR=$GITHUB_WORKSPACE/daq-release
          INPUT_BRANCH=${{ github.event.inputs.feature-branch }}
          export FEATURE_BRANCH=${INPUT_BRANCH:-"develop"}

          cd $DAQ_RELEASE_DIR

          python3 scripts/spack/make-release-repo.py -u \
          -b ${FEATURE_BRANCH} \
          -i configs/dunedaq/dunedaq-develop/release.yaml \
          -t spack-repos/dunedaq-repo-template \
          -r ${DAQ_RELEASE} \
          -o ${SPACK_RELEASE}/spack-${SPACK_VERSION}

          cd $SPACK_RELEASE
          source spack-${SPACK_VERSION}/share/spack/setup-env.sh

          echo "*********** spack arch ************ "
          spack arch

          cat <<EOT > $SPACK_ROOT/etc/spack/defaults/repos.yaml
          repos:
            - ${SPACK_RELEASE}/spack-${SPACK_VERSION}/spack-repo
            - ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/spack-repo-externals
            - \$spack/var/spack/repos/builtin
          EOT

          spack repo list

          cat <<EOT >> $SPACK_ROOT/etc/spack/defaults/upstreams.yaml
          upstreams:
            spack-externals:
              install_tree: ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/opt/spack
          EOT


          cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/linux/compilers.yaml \
          $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/linux/
          # verify the compilers have been added
          spack compiler list

          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml
          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml

          sed -i 's/host_compatible: true/host_compatible: false/g' $SPACK_ROOT/etc/spack/defaults/concretizer.yaml

          spack spec --reuse dunedaq@${DAQ_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64 |  tee $SPACK_RELEASE/spec_dunedaq_log.txt

          cd $SPACK_RELEASE_DIR/../
          tar zcf spack-${DAQ_RELEASE}.tar.gz ${DAQ_RELEASE}
          mkdir -p $GITHUB_WORKSPACE/nightly-spack-dunedaq
          rm -f $GITHUB_WORKSPACE/nightly-spack-dunedaq/*.tar.gz
          mv spack-${DAQ_RELEASE}.tar.gz $GITHUB_WORKSPACE/nightly-spack-dunedaq

    - name: upload empty spack tarball for dunedaq
      uses: actions/upload-artifact@v3
      with:
        name: nightly_spack_dunedaq
        path: ${{ github.workspace }}/nightly-spack-dunedaq

    - name: install spack for the dunedaq release
      env:
        NIGHTLY_TAG: ${{needs.make_nightly_tag.outputs.tag}}
      run: |
          export SPACK_VERSION=0.20.0
          export GCC_VERSION=12.1.0
          export EXT_VERSION=v2.0
          export SPACK_EXTERNALS=/cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-${EXT_VERSION}/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          export DAQ_RELEASE="NAB${NIGHTLY_TAG}"
          export SPACK_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/nightly/$DAQ_RELEASE
          export SPACK_RELEASE=$SPACK_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          cd $SPACK_RELEASE
          source spack-${SPACK_VERSION}/share/spack/setup-env.sh

          spack install --reuse dunedaq@${DAQ_RELEASE}%gcc@12.1.0 dbe@${DAQ_RELEASE}%gcc@12.1.0  build_type=RelWithDebInfo arch=linux-almalinux9-x86_64
          spack clean -a

          cd $SPACK_RELEASE_DIR/../
          tar zcf ${DAQ_RELEASE}.tar.gz ${DAQ_RELEASE}
          mkdir -p $GITHUB_WORKSPACE/nightly-dunedaq
          rm -f $GITHUB_WORKSPACE/nightly-dunedaq/*.tar.gz
          mv ${DAQ_RELEASE}.tar.gz $GITHUB_WORKSPACE/nightly-dunedaq

    - name: upload spack nightly tarball for dunedaq
      uses: actions/upload-artifact@v3
      with:
        name: nightly_dunedaq
        path: ${{ github.workspace }}/nightly-dunedaq

    - name: setup directories and install spack for the fddaq release
      env:
        NIGHTLY_TAG: ${{needs.make_nightly_tag.outputs.tag}}
      run: |
          export DET=fd
          export SPACK_VERSION=0.20.0
          export GCC_VERSION=12.1.0
          export EXT_VERSION=v2.0
          export SPACK_EXTERNALS=/cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-${EXT_VERSION}/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          export BASE_DAQ_RELEASE="NAB${NIGHTLY_TAG}"
          export SPACK_BASE_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/nightly/$BASE_DAQ_RELEASE
          export SPACK_BASE_RELEASE=$SPACK_BASE_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          export DAQ_RELEASE="NA${DET^^}${NIGHTLY_TAG}"
          export SPACK_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/nightly/$DAQ_RELEASE
          export SPACK_RELEASE=$SPACK_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          mkdir -p ${SPACK_RELEASE}


          cd ${SPACK_RELEASE}
          wget https://github.com/spack/spack/archive/refs/tags/v${SPACK_VERSION}.tar.gz
          tar xf v${SPACK_VERSION}.tar.gz
          ln -s spack-${SPACK_VERSION} spack-installation
          rm -f v${SPACK_VERSION}.tar.gz


          export DAQ_RELEASE_DIR=$GITHUB_WORKSPACE/daq-release
          INPUT_BRANCH=${{ github.event.inputs.feature-branch }}
          export FEATURE_BRANCH=${INPUT_BRANCH:-"develop"}

          cd $DAQ_RELEASE_DIR
          python3 scripts/spack/make-release-repo.py -u \
          -b ${FEATURE_BRANCH} \
          -i configs/${DET}daq/${DET}daq-develop/release.yaml \
          -t spack-repos/${DET}daq-repo-template \
          -r ${DAQ_RELEASE} \
          --base-release ${BASE_DAQ_RELEASE} \
          -o ${SPACK_RELEASE}/spack-${SPACK_VERSION}

          cd $SPACK_RELEASE
          source spack-${SPACK_VERSION}/share/spack/setup-env.sh

          cat <<EOT > $SPACK_ROOT/etc/spack/defaults/repos.yaml
          repos:
            - ${SPACK_RELEASE}/spack-${SPACK_VERSION}/spack-repo
            - ${SPACK_BASE_RELEASE}/spack-${SPACK_VERSION}/spack-repo
            - ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/spack-repo-externals
            - \$spack/var/spack/repos/builtin
          EOT

          spack repo list

          cat <<EOT >> $SPACK_ROOT/etc/spack/defaults/upstreams.yaml
          upstreams:
            ${BASE_DAQ_RELEASE}:
              install_tree: ${SPACK_BASE_RELEASE}/spack-${SPACK_VERSION}/opt/spack
            spack-externals:
              install_tree: ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/opt/spack
          EOT

          cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/linux/compilers.yaml \
          $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/linux/
          spack compiler list

          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml
          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml

          sed -i 's/host_compatible: true/host_compatible: false/g' $SPACK_ROOT/etc/spack/defaults/concretizer.yaml

          spack spec --reuse ${DET}daq@${DAQ_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64 |  tee $SPACK_RELEASE/spec_${DET}daq_log.txt
          spack install --reuse ${DET}daq@${DAQ_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64

          # Generate pyvenv_requirements.txt
          spack load ${DET}daq@${DAQ_RELEASE}
          /usr/bin/python3 $DAQ_RELEASE_DIR/scripts/spack/make-release-repo.py \
          -o ${SPACK_RELEASE}/../ \
          --pyvenv-requirements \
          -i $DAQ_RELEASE_DIR/configs/${DET}daq/${DET}daq-develop/release.yaml

          python -m venv --prompt dbt ${SPACK_RELEASE}/../.venv
          source ${SPACK_RELEASE}/../.venv/bin/activate

          python -m pip install -r ${SPACK_RELEASE}/../pyvenv_requirements.txt

          spack clean -a

          pushd ${SPACK_RELEASE_DIR}
          cp $DAQ_RELEASE_DIR/configs/${DET}daq/${DET}daq-develop/dbt-build-order.cmake .
          tar zcf venv.tar.gz .venv/
          popd

          cd $SPACK_RELEASE_DIR/../
          tar zcf ${DAQ_RELEASE}.tar.gz ${DAQ_RELEASE}
          mkdir -p $GITHUB_WORKSPACE/nightly-${DET}daq
          rm -f $GITHUB_WORKSPACE/nightly-${DET}daq/*.tar.gz
          mv ${DAQ_RELEASE}.tar.gz $GITHUB_WORKSPACE/nightly-${DET}daq

    - name: upload spack nightly tarball for fddaq
      uses: actions/upload-artifact@v3
      with:
        name: nightly_fddaq
        path: ${{ github.workspace }}/nightly-fddaq

    - name: setup directories and install spack for the nddaq release
      env:
        NIGHTLY_TAG: ${{needs.make_nightly_tag.outputs.tag}}
      run: |
          export DET=nd
          export SPACK_VERSION=0.20.0
          export GCC_VERSION=12.1.0
          export EXT_VERSION=v2.0
          export SPACK_EXTERNALS=/cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-${EXT_VERSION}/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          export BASE_DAQ_RELEASE="NAB${NIGHTLY_TAG}"
          export SPACK_BASE_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/nightly/$BASE_DAQ_RELEASE
          export SPACK_BASE_RELEASE=$SPACK_BASE_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          export DAQ_RELEASE="NA${DET^^}${NIGHTLY_TAG}"
          export SPACK_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/nightly/$DAQ_RELEASE
          export SPACK_RELEASE=$SPACK_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          mkdir -p ${SPACK_RELEASE}


          cd ${SPACK_RELEASE}
          wget https://github.com/spack/spack/archive/refs/tags/v${SPACK_VERSION}.tar.gz
          tar xf v${SPACK_VERSION}.tar.gz
          ln -s spack-${SPACK_VERSION} spack-installation
          rm -f v${SPACK_VERSION}.tar.gz


          export DAQ_RELEASE_DIR=$GITHUB_WORKSPACE/daq-release
          INPUT_BRANCH=${{ github.event.inputs.feature-branch }}
          export FEATURE_BRANCH=${INPUT_BRANCH:-"develop"}

          cd $DAQ_RELEASE_DIR
          python3 scripts/spack/make-release-repo.py -u \
          -b ${FEATURE_BRANCH} \
          -i configs/${DET}daq/${DET}daq-develop/release.yaml \
          -t spack-repos/${DET}daq-repo-template \
          -r ${DAQ_RELEASE} \
          --base-release ${BASE_DAQ_RELEASE} \
          -o ${SPACK_RELEASE}/spack-${SPACK_VERSION}

          cd $SPACK_RELEASE
          source spack-${SPACK_VERSION}/share/spack/setup-env.sh

          cat <<EOT > $SPACK_ROOT/etc/spack/defaults/repos.yaml
          repos:
            - ${SPACK_RELEASE}/spack-${SPACK_VERSION}/spack-repo
            - ${SPACK_BASE_RELEASE}/spack-${SPACK_VERSION}/spack-repo
            - ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/spack-repo-externals
            - \$spack/var/spack/repos/builtin
          EOT

          spack repo list

          cat <<EOT >> $SPACK_ROOT/etc/spack/defaults/upstreams.yaml
          upstreams:
            ${BASE_DAQ_RELEASE}:
              install_tree: ${SPACK_BASE_RELEASE}/spack-${SPACK_VERSION}/opt/spack
            spack-externals:
              install_tree: ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/opt/spack
          EOT

          cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/linux/compilers.yaml \
          $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/linux/
          spack compiler list

          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml
          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml

          sed -i 's/host_compatible: true/host_compatible: false/g' $SPACK_ROOT/etc/spack/defaults/concretizer.yaml

          spack spec --reuse ${DET}daq@${DAQ_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64 |  tee $SPACK_RELEASE/spec_${DET}daq_log.txt
          spack install --reuse ${DET}daq@${DAQ_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64

          # Generate pyvenv_requirements.txt
          spack load ${DET}daq@${DAQ_RELEASE}
          /usr/bin/python3 $DAQ_RELEASE_DIR/scripts/spack/make-release-repo.py \
          -o ${SPACK_RELEASE}/../ \
          --pyvenv-requirements \
          -i $DAQ_RELEASE_DIR/configs/${DET}daq/${DET}daq-develop/release.yaml

          python -m venv --prompt dbt ${SPACK_RELEASE}/../.venv
          source ${SPACK_RELEASE}/../.venv/bin/activate

          python -m pip install -r ${SPACK_RELEASE}/../pyvenv_requirements.txt

          spack clean -a

          pushd ${SPACK_RELEASE_DIR}
          cp $DAQ_RELEASE_DIR/configs/${DET}daq/${DET}daq-develop/dbt-build-order.cmake .
          tar zcf venv.tar.gz .venv/
          popd

          cd $SPACK_RELEASE_DIR/../
          tar zcf ${DAQ_RELEASE}.tar.gz ${DAQ_RELEASE}
          mkdir -p $GITHUB_WORKSPACE/nightly-${DET}daq
          rm -f $GITHUB_WORKSPACE/nightly-${DET}daq/*.tar.gz
          mv ${DAQ_RELEASE}.tar.gz $GITHUB_WORKSPACE/nightly-${DET}daq
