name: Test Workflow

on:
  #schedule:
    #- cron: "0 3 * * *"

  workflow_dispatch:
    inputs:
      tag-prefix:
        description: 'nightly tag prefix'
        default: ''
      feature-branch:
        description: 'feature branch to be used across all DAQ repos wherever possible.'
        default: develop
      cvmfs-deployment:
        description: 'whether to deploy the release to cvmfs'
        default: 'no'

jobs:
  make_nightly_tag:
    name: create nightly tag and decide if deploying to cvmfs
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create_nightly_tag.outputs.nightly_tag }} 
    defaults:
      run:
        shell: bash
    steps:
      - id: create_nightly_tag
        run: |
          date_tag=$(date +%y-%m-%d)
          echo "nightly_tag=${{ github.event.inputs.tag-prefix }}${date_tag}"  >>  "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"


  publish_to_cvmfs:
    name: publish to cvmfs
    runs-on: isc01


    steps:
    - name: check_cvmfs_deployment
      id: do_deployment
      run: |
        cvmfs_deployment_input=${{ github.event.inputs.cvmfs-deployment }}
        cvmfs_deployment_flag=${cvmfs_deployment_input:-"yes"}
        echo "Do cvmfs deployment: ${cvmfs_deployment_flag}"
        [[ ${cvmfs_deployment_flag} == 'no' ]] && exit 1
      continue-on-error: true

    - name: start docker container, and then rsync... 
      if: steps.do_deployment.outcome == 'success'
      run: |
        IMAGE="ghcr.io/dune-daq/sl7-slim-externals:spack-dev-v1.1"

        cd $GITHUB_WORKSPACE
        cat << EOT > publish.sh
        #!/bin/bash
        
        
        source /cvmfs/dunedaq.opensciencegrid.org/tools/dbt/latest/env.sh
        dbt-setup-release -n last_fddaq
        
        export KRB5CCNAME=$(mktemp)
        /scratch-home/get-ticket.sh

        klist -l
        
        fd_release_dir=/cvmfs/dunedaq-development.opensciencegrid.org/nightly/last_fddaq
        #mv /scratch/fddaq_app_rte.sh \$fd_release_dir/daq_app_rte.sh
        #mv /scratch/fddaq-dbt-setup-dbt-setup-release_env.sh \$fd_release_dir/dbt-setup-release-env.sh
        nd_release_dir=/cvmfs/dunedaq-development.opensciencegrid.org/nightly/last_nddaq
        #mv /scratch/nddaq_app_rte.sh \$fd_release_dir/daq_app_rte.sh
        #mv /scratch/nddaq-dbt-setup-dbt-setup-release_env.sh \$fd_release_dir/dbt-setup-release-env.sh
        
        export CVMFS_SERVER="oasiscfs01.fnal.gov"
        export CVMFS_USER="cvmfsdunedaqdev"
        export REPO=dunedaq-development.opensciencegrid.org
        export DEST=/cvmfs/\$REPO/sandbox/spack-nightly
        #export DEST=/cvmfs/\$REPO/nightly
        
        # Open transaction
        ssh -o StrictHostKeyChecking=no -l \${CVMFS_USER} \${CVMFS_SERVER} "cvmfs_server transaction \${REPO}"
        # rsync
        cd /cvmfs/\$REPO
        spack clean -a
        rsync -e "ssh -o StrictHostKeyChecking=no" -rlpvt --stats nightly/last_fddaq \${CVMFS_USER}@\${CVMFS_SERVER}:\$DEST
        rsync -e "ssh -o StrictHostKeyChecking=no" -rlpvt --stats nightly/last_nddaq \${CVMFS_USER}@\${CVMFS_SERVER}:\$DEST
        rsync -e "ssh -o StrictHostKeyChecking=no" -rlpvt --stats --delete-after nightly/N*-??-?? \${CVMFS_USER}@\${CVMFS_SERVER}:\$DEST
        # publish
        ssh -o StrictHostKeyChecking=no -l \${CVMFS_USER} \${CVMFS_SERVER} "cvmfs_server publish \${REPO}"
        EOT
        chmod +x publish.sh

        docker pull $IMAGE
        docker run --rm -v $GITHUB_WORKSPACE:/scratch -v $HOME:/scratch-home $IMAGE /scratch/publish.sh
        rm -f $GITHUB_WORKSPACE/publish.sh
