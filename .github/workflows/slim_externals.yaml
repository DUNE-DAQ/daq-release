name: Build docker image with slim externals

on:
  workflow_dispatch:

jobs:

  build_alma9_externals:
    name: build_al9_initial
    runs-on: daq
    permissions:
      packages: write
      contents: read
    steps:
      - name: Intro
        run: |
          echo "Will create a ghcr.io/dune-daq/alma9-slim-externals:fddatautilities image"
          echo "Image contents will include $HOSTNAME:/home/nfs/dunedaq/jcfree/externals_fddatautilities/spack/externals/ext-v2.1"

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/dune-daq/alma9-slim-externals
          tags: |
            type=raw,value=fddatautilities-initial

      - name: prepare build dir
        id: prep_build_dir
        run: |
          build_dir="/home/nfs/dunedaq/jcfree/externals_fddatautilities/"
          cd $build_dir
          refresh_date=$(date +%y-%m-%d)
          echo "FROM ghcr.io/dune-daq/alma9-spack:latest" > Dockerfile
          echo 'MAINTAINER John Freeman "jcfree@fnal.gov"' >> Dockerfile
          echo "ENV REFRESHED_AT $refresh_date" >> Dockerfile
          echo "ADD spack/externals/ext-v2.1 /cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-v2.1" >> Dockerfile
          echo "RUN source /cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-v2.1/spack-0.20.0/share/spack/setup-env.sh && spack uninstall -y llvm" >> Dockerfile
          echo "ADD tools /cvmfs/dunedaq.opensciencegrid.org/tools" >> Dockerfile
          echo "ADD setup_dunedaq.sh /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh" >> Dockerfile
          echo "ADD pypi-repo /cvmfs/dunedaq.opensciencegrid.org/pypi-repo" >> Dockerfile
          echo 'ENTRYPOINT ["/bin/bash"]' >> Dockerfile

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: /home/nfs/dunedaq/jcfree/externals_fddatautilities
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Clean up
        if: always()
        run: |

            rm -f /home/nfs/dunedaq/jcfree/externals_fddatautilities/Dockerfile
            docker image prune -f
            docker container prune -f
            docker network prune -f
            docker volume prune -f

  build_alma9_slim_externals:
    name: build_alma9
    runs-on: daq
    needs: build_alma9_externals
    permissions:
      packages: write
      contents: read
    steps:    
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/dune-daq/alma9-slim-externals
          tags: |
            type=raw,value=fddatautilities

      - name: prepare build dir
        run: |
          build_dir="${{ github.workspace }}/docker-build"
          mkdir -p $build_dir
          cd $build_dir
          refresh_date=$(date +%y-%m-%d)
          echo "FROM ghcr.io/dune-daq/alma9-spack:latest" > Dockerfile
          echo 'MAINTAINER John Freeman "jcfree@fnal.gov"' >> Dockerfile
          echo "ENV REFRESHED_AT $refresh_date" >> Dockerfile
          echo "COPY --from=ghcr.io/dune-daq/alma9-slim-externals:fddatautilities-initial /cvmfs/dunedaq.opensciencegrid.org/spack /cvmfs/dunedaq.opensciencegrid.org/spack" >> Dockerfile
          echo "COPY --from=ghcr.io/dune-daq/alma9-slim-externals:fddatautilities-initial /cvmfs/dunedaq.opensciencegrid.org/tools /cvmfs/dunedaq.opensciencegrid.org/tools" >> Dockerfile
          echo "COPY --from=ghcr.io/dune-daq/alma9-slim-externals:fddatautilities-initial /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh" >> Dockerfile
          echo "COPY --from=ghcr.io/dune-daq/alma9-slim-externals:fddatautilities-initial /cvmfs/dunedaq.opensciencegrid.org/pypi-repo /cvmfs/dunedaq.opensciencegrid.org/pypi-repo" >> Dockerfile
          echo 'ENTRYPOINT ["/bin/bash"]' >> Dockerfile

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: ${{ github.workspace }}/docker-build
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
