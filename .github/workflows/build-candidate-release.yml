name: Build candidate release

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'targeted release (e.g. v4.1.0)'
        required: true 
      build-number:
        description: 'candidate release build number, e.g. 1'
        required: true 

jobs:
  build_the_candidate_release_spack:
    name: build_dev_release_spack
    runs-on: isc01
    #runs-on: daq
    container:
      image: ghcr.io/dune-daq/alma9-slim-externals:v2.0T
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout daq-release
      uses: actions/checkout@v4
      with:
        repository: DUNE-DAQ/daq-release
        path: daq-release

    - name: setup directories and install spack for the dunedaq release
      run: |
          export SPACK_VERSION=0.20.0
          export GCC_VERSION=12.1.0
          export EXT_VERSION=v2.0
          export SPACK_EXTERNALS=/cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-${EXT_VERSION}/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          # dunedaq-v4.1.0
          export DAQ_RELEASE=dunedaq-${{ github.event.inputs.release }}
          # rc-v4.1.0-1
          export RC_RELEASE=rc-${{ github.event.inputs.release }}-${{ github.event.inputs.build-number }}
          export SPACK_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/candidates/$RC_RELEASE
          export SPACK_RELEASE=$SPACK_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          mkdir -p ${SPACK_RELEASE}


          cd ${SPACK_RELEASE}
          wget https://github.com/spack/spack/archive/refs/tags/v${SPACK_VERSION}.tar.gz
          tar xf v${SPACK_VERSION}.tar.gz
          ln -s spack-${SPACK_VERSION} spack-installation
          rm -f v${SPACK_VERSION}.tar.gz

          export DAQ_RELEASE_DIR=$GITHUB_WORKSPACE/daq-release

          cd $DAQ_RELEASE_DIR

          python3 scripts/spack/make-release-repo.py -u \
          -i configs/dunedaq/${DAQ_RELEASE}/release.yaml \
          -t spack-repos/dunedaq-repo-template \
          -r ${RC_RELEASE} \
          -o ${SPACK_RELEASE}/spack-${SPACK_VERSION}

          cd $SPACK_RELEASE
          source spack-${SPACK_VERSION}/share/spack/setup-env.sh

          echo "*********** spack arch ************ "
          spack arch

          cat <<EOT > $SPACK_ROOT/etc/spack/defaults/repos.yaml
          repos:
            - ${SPACK_RELEASE}/spack-${SPACK_VERSION}/spack-repo
            - ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/spack-repo-externals
            - \$spack/var/spack/repos/builtin
          EOT

          spack repo list

          cat <<EOT >> $SPACK_ROOT/etc/spack/defaults/upstreams.yaml
          upstreams:
            spack-externals:
              install_tree: ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/opt/spack
          EOT


          cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/linux/compilers.yaml \
          $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/linux/
          # verify the compilers have been added
          spack compiler list

          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml
          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml

          sed -i 's/host_compatible: true/host_compatible: false/g' $SPACK_ROOT/etc/spack/defaults/concretizer.yaml

          spack spec --reuse dunedaq@${RC_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64 |  tee $SPACK_RELEASE/spec_dunedaq_log.txt

          cd $SPACK_RELEASE_DIR/../
          tar zcf spack-${RC_RELEASE}.tar.gz ${RC_RELEASE}
          mkdir -p $GITHUB_WORKSPACE/rc-spack-dunedaq
          rm -rf $GITHUB_WORKSPACE/rc-spack-dunedaq/*
          mv spack-${RC_RELEASE}.tar.gz $GITHUB_WORKSPACE/rc-spack-dunedaq

    - name: upload empty spack tarball for dunedaq
      uses: actions/upload-artifact@v3
      with:
        name: rc_spack_dunedaq
        path: ${{ github.workspace }}/rc-spack-dunedaq

    - name: install spack for the dunedaq release
      run: |
          export SPACK_VERSION=0.20.0
          export GCC_VERSION=12.1.0
          export EXT_VERSION=v2.0
          export SPACK_EXTERNALS=/cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-${EXT_VERSION}/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          # dunedaq-v4.1.0
          export DAQ_RELEASE=dunedaq-${{ github.event.inputs.release }}
          # rc-v4.1.0-1
          export RC_RELEASE=rc-${{ github.event.inputs.release }}-${{ github.event.inputs.build-number }}
          export SPACK_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/candidates/$RC_RELEASE
          export SPACK_RELEASE=$SPACK_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          cd $SPACK_RELEASE
          source spack-${SPACK_VERSION}/share/spack/setup-env.sh

          spack install --reuse dunedaq@${RC_RELEASE}%gcc@12.1.0 dbe@${RC_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64
          spack clean -a

          cd $SPACK_RELEASE_DIR/../
          tar zcf ${RC_RELEASE}.tar.gz ${RC_RELEASE}
          mkdir -p $GITHUB_WORKSPACE/candidate-releases
          rm -rf $GITHUB_WORKSPACE/candidate-releases/*
          mv ${RC_RELEASE}.tar.gz $GITHUB_WORKSPACE/candidate-releases

    - name: upload spack candidate release tarball for dunedaq
      uses: actions/upload-artifact@v3
      with:
        name: candidates_dunedaq
        path: ${{ github.workspace }}/candidate-releases

    - name: setup directories and install spack for the fddaq release
      run: |
          export DET=fd
          export SPACK_VERSION=0.20.0
          export GCC_VERSION=12.1.0
          export EXT_VERSION=v2.0
          export SPACK_EXTERNALS=/cvmfs/dunedaq.opensciencegrid.org/spack/externals/ext-${EXT_VERSION}/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          export RC_BASE_RELEASE=rc-${{ github.event.inputs.release }}-${{ github.event.inputs.build-number }}
          export SPACK_BASE_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/candidates/$RC_BASE_RELEASE
          export SPACK_BASE_RELEASE=$SPACK_BASE_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION


          # fd-v4.1.0
          export DAQ_RELEASE=${DET}daq-${{ github.event.inputs.release }}
          # fd-v4.1.0-c1
          export RC_RELEASE=${DET}-${{ github.event.inputs.release }}-c${{ github.event.inputs.build-number }}
          export SPACK_RELEASE_DIR=/cvmfs/dunedaq-development.opensciencegrid.org/candidates/$RC_RELEASE
          export SPACK_RELEASE=$SPACK_RELEASE_DIR/spack-$SPACK_VERSION-gcc-$GCC_VERSION

          mkdir -p ${SPACK_RELEASE}


          cd ${SPACK_RELEASE}
          wget https://github.com/spack/spack/archive/refs/tags/v${SPACK_VERSION}.tar.gz
          tar xf v${SPACK_VERSION}.tar.gz
          ln -s spack-${SPACK_VERSION} spack-installation
          rm -f v${SPACK_VERSION}.tar.gz


          export DAQ_RELEASE_DIR=$GITHUB_WORKSPACE/daq-release

          cd $DAQ_RELEASE_DIR
          python3 scripts/spack/make-release-repo.py -u \
          -i configs/${DET}daq/${DAQ_RELEASE}/release.yaml \
          -t spack-repos/${DET}daq-repo-template \
          -r ${RC_RELEASE} \
          --base-release ${RC_BASE_RELEASE} \
          -o ${SPACK_RELEASE}/spack-${SPACK_VERSION}

          cd $SPACK_RELEASE
          source spack-${SPACK_VERSION}/share/spack/setup-env.sh

          cat <<EOT > $SPACK_ROOT/etc/spack/defaults/repos.yaml
          repos:
            - ${SPACK_RELEASE}/spack-${SPACK_VERSION}/spack-repo
            - ${SPACK_BASE_RELEASE}/spack-${SPACK_VERSION}/spack-repo
            - ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/spack-repo-externals
            - \$spack/var/spack/repos/builtin
          EOT

          spack repo list

          cat <<EOT >> $SPACK_ROOT/etc/spack/defaults/upstreams.yaml
          upstreams:
            ${RC_BASE_RELEASE}:
              install_tree: ${SPACK_BASE_RELEASE}/spack-${SPACK_VERSION}/opt/spack
            spack-externals:
              install_tree: ${SPACK_EXTERNALS}/spack-${SPACK_VERSION}/opt/spack
          EOT

          cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/linux/compilers.yaml \
          $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/linux/
          spack compiler list

          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/config.yaml
          \cp $SPACK_EXTERNALS/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml  $SPACK_RELEASE/spack-${SPACK_VERSION}/etc/spack/defaults/modules.yaml

          sed -i 's/host_compatible: true/host_compatible: false/g' $SPACK_ROOT/etc/spack/defaults/concretizer.yaml

          spack spec --reuse ${DET}daq@${RC_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64 |  tee $SPACK_RELEASE/spec_${DET}daq_log.txt
          spack install --reuse ${DET}daq@${RC_RELEASE}%gcc@12.1.0 build_type=RelWithDebInfo arch=linux-almalinux9-x86_64

          # Generate pyvenv_requirements.txt
          spack load ${DET}daq@${RC_RELEASE}
          /usr/bin/python3 $DAQ_RELEASE_DIR/scripts/spack/make-release-repo.py \
          -o ${SPACK_RELEASE}/../ \
          --pyvenv-requirements \
          -i $DAQ_RELEASE_DIR/configs/${DET}daq/${DAQ_RELEASE}/release.yaml

          python -m venv --prompt dbt ${SPACK_RELEASE}/../.venv
          source ${SPACK_RELEASE}/../.venv/bin/activate

          python -m pip install -r ${SPACK_RELEASE}/../pyvenv_requirements.txt

          spack clean -a

          pushd ${SPACK_RELEASE_DIR}
          cp $DAQ_RELEASE_DIR/configs/${DET}daq/${DET}daq-develop/dbt-build-order.cmake .
          tar zcf venv.tar.gz .venv/
          popd

          cd $SPACK_RELEASE_DIR/../
          tar zcf ${RC_RELEASE}.tar.gz ${RC_RELEASE}
          mkdir -p $GITHUB_WORKSPACE/candidates-${DET}daq
          rm -rf $GITHUB_WORKSPACE/candidates-${DET}daq/*
          mv ${RC_RELEASE}.tar.gz $GITHUB_WORKSPACE/candidates-${DET}daq
